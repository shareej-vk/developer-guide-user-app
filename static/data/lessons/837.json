{
  "id": 837,
  "unit_id": 83,
  "title": "Lesson 10: Changing Element Attributes (setAttribute, getAttribute, removeAttribute)",
  "slug": "lesson_10_changing_element_attributes_setattribute_getattribute_removeattribute",
  "content": "<div class=\"pt-6\">\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 10: Changing Element Attributes (setAttribute, getAttribute, removeAttribute)</h1>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">\n        You've learned to change content, but elements have more than just content – they have attributes! Let's see how to manage those.\n    </p>\n\n    <!-- Illustration: Modifying element attributes -->\n    <div class=\"flex justify-center mb-8\">\n        <svg class=\"h-64 w-full max-w-2xl\" viewBox=\"0 0 1920 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"1920\" height=\"500\" rx=\"10\" fill=\"#F0F4F8\"/>\n            <!-- Element with Attributes -->\n            <rect x=\"100\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n            <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#E65100\">HTML Element</text>\n            <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-width=\"1\"/>\n            <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Tag: img</text>\n            <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n            <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Attribute: src=\"old-image.jpg\"</text>\n            <rect x=\"150\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n            <text x=\"500\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Attribute: alt=\"An old image\"</text>\n            <!-- JavaScript Tools -->\n            <rect x=\"1000\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n            <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#1976D2\">JS Tools</text>\n            <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">1. Get: getAttribute(\"src\")</text>\n            <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">2. Set: setAttribute(\"src\", \"new-image.png\")</text>\n            <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">3. Remove: removeAttribute(\"alt\")</text>\n            <!-- Connection -->\n            <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n            <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n            <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Control Element Properties</text>\n        </svg>\n        <p class=\"intro-explanation text-gray-600 leading-relaxed\">HTML attributes are like specific settings for your elements – think of the `src` for an `<img>`, the `href` for an `<a>` tag, or the `alt` text for an image. JavaScript lets you dynamically read, change, or even remove these attributes after the page has loaded. This is crucial for making your web pages interactive, like updating an image source when a button is clicked or changing a link's destination.</p>\n        <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Master attributes: Get, set, and remove them to control element behavior!</p>\n    </div>\n    <!-- Tab 2 Content -->\n    <div class=\"tab-content content2\" id=\"content2\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 2: Reading and Writing Attributes</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">How do you retrieve the current value of an attribute (like an image's `src`) and then change it to something new using JavaScript?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- Element with Attributes -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Element with Attributes</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-width=\"1\"/>\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Current src: \"old-image.jpg\"</text>\n                <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Current alt: \"An old image\"</text>\n                <!-- JavaScript Actions -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JS Actions</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Get src: element.getAttribute(\"src\");</text>\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Set src: element.setAttribute(\"src\", \"new-image.png\");</text>\n                <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Remove alt: element.removeAttribute(\"alt\");</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Get, Set, Remove Attributes</text>\n            </svg>\n            <p class=\"intro-explanation text-gray-600 leading-relaxed\">Once you have a reference to an element, you can use `getAttribute('attributeName')` to read its current attribute values. To change an attribute or add a new one, you use `setAttribute('attributeName', 'newValue')`. If you want to remove an attribute completely, `removeAttribute('attributeName')` is your tool. These methods are vital for making elements dynamic, like updating an image source or changing a link's target.</p>\n            <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Master attribute manipulation: Get, set, and remove with JavaScript!</p>\n        </div>\n    </div>\n    <!-- Tab 3 Content -->\n    <div class=\"tab-content content3\" id=\"content3\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 3: The Power of Attributes</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Attributes control so much about an element's behavior and identity. How can JavaScript dynamically modify these settings?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- Element with Attributes -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Element with Settings</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Link: href=\"old-page.html\"</text>\n                <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Image: src=\"logo.png\"</text>\n                <rect x=\"150\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Input: type=\"text\"</text>\n                <!-- JavaScript -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JavaScript Controls</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Change Link: setAttribute(\"href\", \"new-page.html\")</text>\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Change Image: setAttribute(\"src\", \"new-logo.png\")</text>\n                <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Change Input Type: setAttribute(\"type\", \"password\")</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Dynamic Behavior</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">Attributes are crucial for defining an element's behavior and identity. Need to swap images? Change a link's destination? Make an input a password field? You can do it all using JavaScript's attribute methods. `setAttribute()` lets you modify or add attributes, `getAttribute()` lets you read their current values, and `removeAttribute()` lets you remove them completely, giving you fine-grained control over your elements.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Control element settings: Manage attributes dynamically!</p>\n            </div>\n        </div>\n        <!-- Tab 4 Content -->\n        <div class=\"tab-content content4\" id=\"content4\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 4: Getting, Setting, and Removing</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">What are the three core JavaScript methods that allow you to interact with an element's attributes?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- Element -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Target Element</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Attribute: src=\"image.jpg\"</text>\n                    <!-- JS Methods -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JS Methods</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">1. Get: getAttribute(\"src\")</text>\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">2. Set: setAttribute(\"src\", \"new.png\")</text>\n                    <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">3. Remove: removeAttribute(\"alt\")</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Control Element Settings</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">JavaScript provides three primary methods for attribute manipulation: `getAttribute(name)` retrieves the value of a specified attribute. `setAttribute(name, value)` modifies an existing attribute or adds a new one if it doesn't exist. `removeAttribute(name)` removes the attribute from the element. These are essential for making elements dynamic, like changing an image source or updating a link's target.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Get, Set, Remove: Full control over element attributes!</p>\n            </div>\n        </div>\n        <!-- Tab 5 Content -->\n        <div class=\"tab-content content5\" id=\"content5\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 5: Controlling Element Behavior</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Attributes define how elements look and behave (like `src` for images or `href` for links). How can JavaScript change these settings to alter element functionality or appearance?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- Element with Attributes -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Element with Settings</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Link: href=\"page1.html\"</text>\n                    <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Image: src=\"logo.png\"</text>\n                    <rect x=\"150\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Input: type=\"text\"</text>\n                    <!-- JavaScript -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JS Control</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Change Link: setAttribute(\"href\", \"page2.html\")</text>\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Change Image: setAttribute(\"src\", \"new-logo.png\")</text>\n                    <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Change Input Type: setAttribute(\"type\", \"password\")</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Dynamic Control</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">Attributes define an element's core properties, like its source (`src`), its link destination (`href`), or its type (`type`). JavaScript's `setAttribute()`, `getAttribute()`, and `removeAttribute()` methods allow you to read, modify, or delete these attributes. This is essential for making your web pages interactive – imagine changing an image source when a user clicks a button, or updating a link's destination.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Control behavior: Get, set, or remove attributes!</p>\n            </div>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "questions": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 10: Changing Element Attributes (setAttribute, getAttribute, removeAttribute)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Test Your Attribute Manipulation Skills!</h2>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 1: What is the purpose of `getAttribute('attributeName')`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It is used to <strong>read the current value</strong> of a specified attribute on an HTML element.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 2: What does `setAttribute('attributeName', 'newValue')` do?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It is used to <strong>change the value of an existing attribute</strong> or to <strong>add a new attribute</strong> to an element if it doesn't already exist.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"100\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <img src=\"old.jpg\"></text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"120\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: imgElement.setAttribute(\"src\", \"new.png\");</text>\n                    <text x=\"450\" y=\"155\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Changes src attribute</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 3: What is the function of `removeAttribute('attributeName')`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It is used to <strong>remove a specified attribute</strong> from an HTML element.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 4: What happens if you use `setAttribute` to set an attribute that already exists?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> If the attribute already exists, `setAttribute` <strong>updates its value</strong> to the new one provided.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 5: What does `getAttribute()` return if the attribute doesn't exist on the element?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns <strong>`null`</strong> if the attribute does not exist on the element.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"100\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <p>No ID</p></text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: pElement.getAttribute(\"id\");</text>\n                    <text x=\"450\" y=\"155\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Returns: null</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 6: How would you set the `src` attribute of an image element to a new URL?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> First, select the image element (e.g., using `getElementById`). Then, use `setAttribute`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const imgElement = document.getElementById(\"myImage\");\nif (imgElement) {\n  imgElement.setAttribute(\"src\", \"path/to/new/image.jpg\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 7: How would you get the current `href` value of a link?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> First, select the link element (e.g., using `querySelector`). Then, use `getAttribute`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const linkElement = document.querySelector(\"a\"); // Select the first link\nif (linkElement) {\n  const currentHref = linkElement.getAttribute(\"href\");\n  console.log(currentHref);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 8: How would you remove the `disabled` attribute from a button?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> First, select the button. Then, use `removeAttribute`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const myButton = document.getElementById(\"submitButton\"); // Assuming button has id=\"submitButton\"\nif (myButton) {\n  myButton.removeAttribute(\"disabled\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 9: Can you use `setAttribute` to add a `data-*` attribute?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Yes, absolutely. `setAttribute` works for any valid HTML attribute, including custom `data-*` attributes.\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const myDiv = document.getElementById(\"myDiv\");\nif (myDiv) {\n  myDiv.setAttribute(\"data-custom\", \"someValue\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 10: What is the difference between setting an attribute via `setAttribute` and directly setting a property (like `element.src`)?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <ol class=\"list-decimal list-inside ml-4 mt-2\">\n                    <li><strong>`setAttribute`</strong>: Always manipulates the attribute as a string in the HTML.</li>\n                    <li><strong>Direct Property Access</strong> (e.g., `imgElement.src = 'new.png'`): Often manipulates the underlying attribute but might also update related DOM properties or trigger specific behaviors directly. For commonly used attributes, direct property access is often more convenient.</li>\n                </ol>\n                However, `setAttribute` is the universal way to handle any attribute, including custom ones.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 11: What would `getAttribute('id')` return if an element has no `id` attribute?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It would return <strong>`null`</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 12: When might `removeAttribute` be useful?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It's useful for removing attributes that control behavior or appearance, such as `disabled` from a button, `hidden` from an element, or `target=\"_blank\"` from a link.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 13: How can you get the `alt` text of an image selected into a variable `myImage`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (myImage) {\n  const altText = myImage.getAttribute(\"alt\");\n  console.log(altText);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 14: What is the correct syntax to set the `href` attribute of a link element stored in `myLink` to \"https://www.example.com\"?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (myLink) {\n  myLink.setAttribute(\"href\", \"https://www.example.com\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 15: If an attribute is not present, what is the behavior of `getAttribute` and `setAttribute`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <ul>\n                    <li><strong>`getAttribute`</strong> returns `null` if the attribute does not exist.</li>\n                    <li><strong>`setAttribute`</strong> will <strong>add</strong> the attribute with the specified value if it does not exist.</li>\n                </ul>\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "display_order": 10,
  "created_at": "2025-06-29 16:06:33",
  "updated_at": "2025-07-01 02:09:24",
  "exercises": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 10: Changing Element Attributes (setAttribute, getAttribute, removeAttribute)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Let's Practice Attribute Manipulation!</h2>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 1: Get an Image Source</h3>\n        <p class=\"text-gray-600 mb-3\">Given an image element with `id=\"profilePic\"`, write the JavaScript to get its `src` attribute value.</p>\n        <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code><img id=\"profilePic\" src=\"default.jpg\" alt=\"User Profile\"></code></pre>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const profilePic = document.getElementById(\"profilePic\");\nif (profilePic) {\n  const currentSrc = profilePic.getAttribute(\"src\");\n  console.log(currentSrc); // Logs \"default.jpg\"\n}</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- HTML Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"100\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <img id=\"profilePic\" src=\"default.jpg\" ...></text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: img.getAttribute(\"src\");</text>\n                    <text x=\"450\" y=\"155\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Returns: \"default.jpg\"</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 2: Change Image Source</h3>\n        <p class=\"text-gray-600 mb-3\">Change the `src` attribute of the image with `id=\"profilePic\"` to `\"new-avatar.png\"`.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const profilePic = document.getElementById(\"profilePic\");\nif (profilePic) {\n  profilePic.setAttribute(\"src\", \"new-avatar.png\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 3: Remove an Attribute</h3>\n        <p class=\"text-gray-600 mb-3\">Given a button with `id=\"submitBtn\"` and a `disabled` attribute, write the JavaScript to remove the `disabled` attribute, making the button clickable.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const submitBtn = document.getElementById(\"submitBtn\");\nif (submitBtn) {\n  submitBtn.removeAttribute(\"disabled\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 4: Get the `href` of a link</h3>\n        <p class=\"text-gray-600 mb-3\">How would you get the URL of the first link (`<a>` tag) on the page?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const firstLink = document.querySelector(\"a\"); // Or getElementById('someLinkId') if it has an ID\nif (firstLink) {\n  const linkUrl = firstLink.getAttribute(\"href\");\n  console.log(linkUrl);\n}</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- HTML Link -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"50\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <a href=\"https://example.com\">Link</a></text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: link.getAttribute(\"href\");</text>\n                    <text x=\"450\" y=\"155\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Returns: \"https://example.com\"</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 5: What happens if you try to `getAttribute` for a non-existent attribute?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns <strong>`null`</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 6: Setting a `data-*` attribute</h3>\n        <p class=\"text-gray-600 mb-3\">How would you set a custom data attribute `data-user-id` to the value `123` on a `div` with ID \"userInfo\"?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const userInfoDiv = document.getElementById(\"userInfo\");\nif (userInfoDiv) {\n  userInfoDiv.setAttribute(\"data-user-id\", \"123\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 7: Removing a `disabled` attribute</h3>\n        <p class=\"text-gray-600 mb-3\">You have a button with `id=\"actionButton\"` that is currently `disabled`. How do you remove the `disabled` attribute using JavaScript?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const actionButton = document.getElementById(\"actionButton\");\nif (actionButton) {\n  actionButton.removeAttribute(\"disabled\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 8: Changing an attribute's value</h3>\n        <p class=\"text-gray-600 mb-3\">You have an image with `id=\"productImage\"` and `src=\"default.jpg\"`. Change its `src` attribute to `\"updated.jpg\"`.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const productImage = document.getElementById(\"productImage\");\nif (productImage) {\n  productImage.setAttribute(\"src\", \"updated.jpg\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 9: Getting a non-existent attribute</h3>\n        <p class=\"text-gray-600 mb-3\">You have a `div` with `id=\"myDiv\"`. What will `myDiv.getAttribute(\"nonExistentAttribute\")` return?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It will return <strong>`null`</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 10: Setting a `title` attribute</h3>\n        <p class=\"text-gray-600 mb-3\">Create a paragraph with `id=\"info-text\"` and set its `title` attribute to \"More Information\".</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                HTML:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code><p id=\"info-text\">Some text</p></code></pre>\n                JavaScript:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const infoText = document.getElementById(\"info-text\");\nif (infoText) {\n  infoText.setAttribute(\"title\", \"More Information\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 11: Removing a `class` attribute</h3>\n        <p class=\"text-gray-600 mb-3\">You have an element with `id=\"box\"` that has the class \"highlight\". How would you remove the \"highlight\" class from it?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would use `removeAttribute`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const boxElement = document.getElementById(\"box\");\nif (boxElement) {\n  boxElement.removeAttribute(\"class\"); // This would remove the entire class attribute\n  // Note: For managing classes specifically, .classList is usually preferred (covered in a later lesson!)\n  // But for direct attribute removal, this is the method.\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 12: Reading a `data-*` attribute</h3>\n        <p class=\"text-gray-600 mb-3\">Given an element with `id=\"product\"` and a `data-price=\"19.99\"` attribute, how do you read the price value?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const productElement = document.getElementById(\"product\");\nif (productElement) {\n  const price = productElement.getAttribute(\"data-price\");\n  console.log(price); // Logs \"19.99\"\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 13: Setting a `tabindex` attribute</h3>\n        <p class=\"text-gray-600 mb-3\">How would you set the `tabindex` attribute of an element with `id=\"myLink\"` to `0`?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const myLink = document.getElementById(\"myLink\");\nif (myLink) {\n  myLink.setAttribute(\"tabindex\", \"0\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 14: Why `getAttribute` might return `null`</h3>\n        <p class=\"text-gray-600 mb-3\">If you try to get an attribute that doesn't exist using `getAttribute()`, what value is returned?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns <strong>`null`</strong>. It's good practice to check for `null` before using the returned value.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 15: What's the difference between getting an attribute with `getAttribute` and directly accessing a property like `element.src`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <ul>\n                    <li><strong>`getAttribute()`</strong>: Always retrieves the value as it is written in the HTML markup (a string).</li>\n                    <li><strong>Direct Property Access</strong> (e.g., `element.src`): Retrieves the attribute's value but might also return a processed or default value (like an absolute URL for `src` or `href`), and can sometimes trigger related DOM updates.</li>\n                </ul>\n                For custom attributes or when you need the exact HTML value, `getAttribute` is preferred. For common attributes like `src`, `href`, `id`, direct property access is often simpler and more idiomatic.\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "video": null,
  "intros": "<div class=\"tabs-container\">\n    <h2 class=\"text-3xl font-extrabold text-gray-800 mb-6 mt-6 text-center\">Lesson 10: Changing Element Attributes (setAttribute, getAttribute, removeAttribute)</h2>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">Master the art of modifying element properties like a digital sculptor</p>                   \n\n    <div class=\"tab-content-container p-6 sm:p-8\">\n        <div class=\"tab-content content1\" id=\"content1\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Element Attribute Magic</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">What if you could reshape any webpage element like modeling clay?</h2>\n            \n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <!-- 16:9 Aspect Ratio SVG -->\n                <div class=\"w-full max-w-4xl mx-auto mb-6\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 800 450\" class=\"w-full h-auto bg-white rounded-lg\">\n                        <!-- Browser Window -->\n                        <rect x=\"50\" y=\"30\" width=\"700\" height=\"390\" fill=\"#F3F4F6\" stroke=\"#D1D5DB\" stroke-width=\"2\" rx=\"4\"/>\n                        \n                        <!-- Browser Header -->\n                        <rect x=\"50\" y=\"30\" width=\"700\" height=\"40\" fill=\"#E5E7EB\" rx=\"4\"/>\n                        <circle cx=\"70\" cy=\"50\" r=\"6\" fill=\"#EF4444\"/>\n                        <circle cx=\"90\" cy=\"50\" r=\"6\" fill=\"#FBBF24\"/>\n                        <circle cx=\"110\" cy=\"50\" r=\"6\" fill=\"#10B981\"/>\n                        \n                        <!-- Original Image Element -->\n                        <rect x=\"100\" y=\"100\" width=\"200\" height=\"150\" fill=\"#DBEAFE\" stroke=\"#3B82F6\" stroke-width=\"2\" rx=\"4\"/>\n                        <text x=\"200\" y=\"130\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">&lt;img id=\"cat\"</text>\n                        <text x=\"200\" y=\"155\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">src=\"cat.jpg\"</text>\n                        <text x=\"200\" y=\"180\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">alt=\"Sleeping cat\"</text>\n                        <text x=\"200\" y=\"205\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">title=\"Fluffy\"&gt;</text>\n                        <image x=\"120\" y=\"110\" width=\"160\" height=\"130\" xlink:href=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='160' height='130' viewBox='0 0 160 130'%3E%3Crect width='160' height='130' fill='%23BFDBFE'/%3E%3Ccircle cx='80' cy='60' r='30' fill='%236B7280'/%3E%3Ccircle cx='65' cy='50' r='5' fill='white'/%3E%3Ccircle cx='95' cy='50' r='5' fill='white'/%3E%3Cpath d='M70 80 Q80 90 90 80' stroke='%23992443' stroke-width='2' fill='none'/%3E%3C/svg%3E\"/>\n                        \n                        <!-- Modified Image Element -->\n                        <rect x=\"500\" y=\"100\" width=\"200\" height=\"150\" fill=\"#D1FAE5\" stroke=\"#10B981\" stroke-width=\"2\" rx=\"4\"/>\n                        <text x=\"600\" y=\"130\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#065F46\">&lt;img id=\"cat\"</text>\n                        <text x=\"600\" y=\"155\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#065F46\">src=\"dog.jpg\"</text>\n                        <text x=\"600\" y=\"180\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#065F46\">alt=\"Running dog\"</text>\n                        <text x=\"600\" y=\"205\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#065F46\">title=\"Playful\"&gt;</text>\n                        <image x=\"520\" y=\"110\" width=\"160\" height=\"130\" xlink:href=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='160' height='130' viewBox='0 0 160 130'%3E%3Crect width='160' height='130' fill='%23A7F3D0'/%3E%3Ccircle cx='80' cy='60' r='25' fill='%238B5CF6'/%3E%3Ccircle cx='65' cy='50' r='5' fill='white'/%3E%3Ccircle cx='95' cy='50' r='5' fill='white'/%3E%3Cpath d='M65 80 Q80 100 95 80' stroke='%23992443' stroke-width='2' fill='none'/%3E%3C/svg%3E\"/>\n                        \n                        <!-- JavaScript Toolbox -->\n                        <rect x=\"300\" y=\"280\" width=\"200\" height=\"120\" fill=\"#FEF3C7\" stroke=\"#F59E0B\" stroke-width=\"2\" rx=\"4\"/>\n                        <text x=\"400\" y=\"300\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#92400E\">Attribute Tools</text>\n                        \n                        <!-- Tool: Get Attribute -->\n                        <rect x=\"320\" y=\"320\" width=\"50\" height=\"30\" fill=\"#F0FDF4\" stroke=\"#10B981\" rx=\"4\"/>\n                        <text x=\"345\" y=\"340\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#065F46\">get</text>\n                        \n                        <!-- Tool: Set Attribute -->\n                        <rect x=\"375\" y=\"320\" width=\"50\" height=\"30\" fill=\"#DBEAFE\" stroke=\"#3B82F6\" rx=\"4\"/>\n                        <text x=\"400\" y=\"340\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#1E40AF\">set</text>\n                        \n                        <!-- Tool: Remove Attribute -->\n                        <rect x=\"430\" y=\"320\" width=\"50\" height=\"30\" fill=\"#FEE2E2\" stroke=\"#EF4444\" rx=\"4\"/>\n                        <text x=\"455\" y=\"340\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#B91C1C\">remove</text>\n                        \n                        <!-- Example Code -->\n                        <rect x=\"100\" y=\"280\" width=\"180\" height=\"120\" fill=\"#EFF6FF\" stroke=\"#3B82F6\" rx=\"4\"/>\n                        <text x=\"190\" y=\"300\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">// Get current value</text>\n                        <text x=\"190\" y=\"325\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">let alt = img.getAttribute('alt');</text>\n                        \n                        <rect x=\"520\" y=\"280\" width=\"180\" height=\"120\" fill=\"#EFF6FF\" stroke=\"#3B82F6\" rx=\"4\"/>\n                        <text x=\"610\" y=\"300\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">// Change attributes</text>\n                        <text x=\"610\" y=\"325\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">img.setAttribute('src','dog.jpg');</text>\n                        <text x=\"610\" y=\"350\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">img.setAttribute('title','Playful');</text>\n                        <text x=\"610\" y=\"375\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">img.removeAttribute('data-hidden');</text>\n                        \n                        <!-- Action Arrows -->\n                        <path d=\"M 400 320 L 250 320 L 250 250\" fill=\"none\" stroke=\"#3B82F6\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 400 320 L 400 250\" fill=\"none\" stroke=\"#3B82F6\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 400 320 L 550 320 L 550 250\" fill=\"none\" stroke=\"#3B82F6\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        \n                        <!-- Tool Icons -->\n                        <circle cx=\"345\" cy=\"340\" r=\"8\" fill=\"white\" stroke=\"#10B981\"/>\n                        <circle cx=\"400\" cy=\"340\" r=\"8\" fill=\"white\" stroke=\"#3B82F6\"/>\n                        <circle cx=\"455\" cy=\"340\" r=\"8\" fill=\"white\" stroke=\"#EF4444\"/>\n                        \n                        <!-- Transformation Indicator -->\n                        <path d=\"M 300 200 L 500 200\" fill=\"none\" stroke=\"#8B5CF6\" stroke-width=\"3\" marker-end=\"url(#arrowhead)\"/>\n                        <text x=\"400\" y=\"190\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#6D28D9\">After Attribute Changes</text>\n                    </svg>\n                </div>\n                \n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">\n                    Think of HTML attributes as the DNA of webpage elements - they determine what elements look like, how they behave, and what information they carry. With <code class=\"bg-gray-200 px-1 rounded\">getAttribute</code>, <code class=\"bg-gray-200 px-1 rounded\">setAttribute</code>, and <code class=\"bg-gray-200 px-1 rounded\">removeAttribute</code>, you become a genetic engineer who can reshape any element at will. \n                </p>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed mt-4\">\n                    These three simple commands let you peek inside elements to see their properties, modify them to create new behaviors, or remove characteristics you no longer need. It's like having a control panel for every aspect of your webpage elements - change images on the fly, update links dynamically, or modify form behavior in real-time!\n                </p>                \n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">\n                    \"Attributes are an element's personality traits - now you have the power to redesign personalities!\"\n                </p>\n            </div> \n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "summary": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 10: Changing Element Attributes (setAttribute, getAttribute, removeAttribute)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Lesson Summary</h2>\n\n    <div class=\"summary-container bg-gray-50 p-6 rounded-lg shadow-md\">\n        <div class=\"flex flex-col lg:flex-row items-center lg:items-start gap-8 mb-8\">\n            <div class=\"lg:w-1/2\">\n                <h3 class=\"text-2xl font-bold text-gray-800 mb-4\">Mastering Attribute Manipulation</h3>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    Attributes are essential properties of HTML elements that control their behavior, identity, and presentation (e.g., `src`, `href`, `id`, `class`, `alt`). JavaScript provides three core methods to dynamically manage these attributes after the page has loaded.\n                </p>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    By using `getAttribute()`, `setAttribute()`, and `removeAttribute()`, you gain the power to read, change, or remove attributes, making your web pages interactive and responsive to user actions or data changes.\n                </p>\n                <h4 class=\"text-xl font-semibold text-gray-700 mb-3\">Key Methods:</h4>\n                <ul class=\"list-disc list-inside text-gray-600 ml-4\">\n                    <li><strong>`getAttribute(name)`:</strong> Reads the value of a specified attribute. Returns `null` if the attribute doesn't exist.</li>\n                    <li><strong>`setAttribute(name, value)`:</strong> Changes an existing attribute's value or adds a new attribute if it doesn't exist.</li>\n                    <li><strong>`removeAttribute(name)`:</strong> Removes a specified attribute from the element.</li>\n                </ul>\n            </div>\n            <div class=\"lg:w-1/2 flex justify-center\">\n                <!-- SVG Illustration: Attribute Manipulation -->\n                <svg class=\"h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"10\" fill=\"#F8F9FA\"/>\n                    <!-- Element with Attributes -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Element</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Attribute: src=\"old.jpg\"</text>\n                    <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Attribute: alt=\"Old Image\"</text>\n                    <!-- JavaScript Tools -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JS Tools</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Get: getAttribute(\"src\")</text>\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Set: setAttribute(\"src\", \"new.png\")</text>\n                    <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Remove: removeAttribute(\"alt\")</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Dynamic Attribute Control</text>\n                </svg>\n            </div>\n        </div>\n\n        <div class=\"bg-sky-50 border-l-4 border-sky-500 text-sky-700 p-4 rounded-r-lg mb-6\" role=\"alert\">\n            <p class=\"font-bold\">Key Takeaway:</p>\n            <p>These methods provide direct access to an element's attributes, allowing you to read their current values, update them, or remove them entirely, which is fundamental for dynamic web page behavior.</p>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->"
}