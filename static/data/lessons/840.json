{
  "id": 840,
  "unit_id": 83,
  "title": "Lesson 13: Creating and Appending Elements (createElement, appendChild, prepend)",
  "slug": "lesson_13_creating_and_appending_elements_createelement_appendchild_prepend",
  "content": "<div class=\"pt-6\">\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 13: Creating and Appending Elements (createElement, appendChild, prepend)</h1>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">\n        You know how to find and change existing elements. But what if you need to add new elements to your page completely from scratch? Let's become DOM builders!\n    </p>\n\n    <!-- Illustration: Building and adding -->\n    <div class=\"flex justify-center mb-8\">\n        <svg class=\"h-64 w-full max-w-2xl\" viewBox=\"0 0 1920 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"1920\" height=\"500\" rx=\"10\" fill=\"#F0F4F8\"/>\n            <!-- Parent Container -->\n            <rect x=\"100\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n            <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#E65100\">Parent Container</text>\n            <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/> <!-- Existing Child 1 -->\n            <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Existing Child 1</text>\n            <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/> <!-- Existing Child 2 -->\n            <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Existing Child 2</text>\n            <!-- New Element Creation -->\n            <rect x=\"1000\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n            <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#1976D2\">New Element</text>\n            <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Create: document.createElement('p')</text>\n            <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Append: parent.appendChild(newP)</text>\n            <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Prepend: parent.prepend(newP)</text>\n            <!-- Connection -->\n            <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n            <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n            <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Build and Insert</text>\n        </svg>\n        <p class=\"intro-explanation text-gray-600 leading-relaxed\">JavaScript provides you with a set of tools to dynamically build and modify the DOM. You can create entirely new HTML elements from scratch using `document.createElement()`. Once created, you can insert them into the existing DOM structure. The `.appendChild()` method adds a new element as the last child of a parent, while `.prepend()` adds it as the first child, giving you control over where the new content appears.</p>\n        <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Build and place: Create new elements and add them where you need them!</p>\n    </div>\n\n    <!-- Tab 2 Content -->\n    <div class=\"tab-content content2\" id=\"content2\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 2: Making New Elements</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Before you can add something new, you need to make it first! How do you create a brand new HTML element using JavaScript?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- Raw Materials -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Raw Materials</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">HTML Tag Name: \"li\"</text>\n                <!-- JavaScript Tool -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">The Tool</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">document.createElement(\"li\")</text>\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Creates a new <li> element object</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Create Elements from Scratch</text>\n            </svg>\n            <p class=\"intro-explanation text-gray-600 leading-relaxed\">The process starts with creation. `document.createElement('tagName')` is your tool to bring new HTML elements into existence within JavaScript's memory. You specify the tag name (like `'div'`, `'p'`, `'li'`), and JavaScript provides you with a newly created element object. This object isn't yet visible on the page; it's like a blueprint for a new building component.</p>\n            <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">`createElement` is your first step to building new DOM structures.</p>\n        </div>\n    </div>\n    <!-- Tab 3 Content -->\n    <div class=\"tab-content content3\" id=\"content3\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 3: Adding to the End</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">After creating a new element, how do you place it at the very end of an existing element's children list?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- Parent Element -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Parent Element</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/> <!-- Child 1 -->\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Existing Child 1</text>\n                <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/> <!-- Child 2 -->\n                <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Existing Child 2</text>\n                <!-- New Element Creation -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">New Element</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">New Paragraph (`p`)</text>\n                <!-- Action: appendChild -->\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"330\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#D32F2F\">appendChild(newParagraph)</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-array=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Add to the End</text>\n            </svg>\n            <p class=\"intro-explanation text-gray-600 leading-relaxed\">The `.appendChild(newNode)` method is used to insert a node as the <strong>last child</strong> of a parent element. Once you've created a new element (e.g., a list item `<li>`) and configured it (added text, attributes, etc.), you select the parent element (e.g., a `<ul>`) and then use `.appendChild()` to add your new node to the end of its children. This is the most common way to build lists or add items to the bottom of a container.</p>\n            <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Append: Add to the end of the parent's children.</p>\n        </div>\n    </div>\n    <!-- Tab 4 Content -->\n    <div class=\"tab-content content4\" id=\"content4\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 4: Adding to the Beginning</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">What if you need to insert a new element not at the end, but right at the very beginning of a parent's children?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- Parent Element -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Parent Element</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/> <!-- Child 1 -->\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Existing Child 1</text>\n                <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/> <!-- Child 2 -->\n                <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Existing Child 2</text>\n                <!-- New Element Creation -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">New Element</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">New Paragraph (`p`)</text>\n                <!-- Action: prepend -->\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"330\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#D32F2F\">prepend(newParagraph)</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Add to the Beginning</text>\n            </svg>\n            <p class=\"intro-explanation text-gray-600 leading-relaxed\">When you need to insert a new element at the start of a parent's children list, `prepend()` is the method to use. It inserts the new node as the very first child, pushing existing children further down the list. This is handy for adding items like headings, notifications, or new list items at the top of a container.</p>\n            <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Prepend: Add to the start of the parent's children.</p>\n        </div>\n    </div>\n    <!-- Tab 5 Content -->\n    <div class=\"tab-content content5\" id=\"content5\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 5: The DOM Construction Kit</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Think of JavaScript as providing a construction kit for your web page. What are the essential tools for building and placing new elements?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- Tools -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">JS Construction Kit</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Tool 1: Create Element (`createElement`)</text>\n                <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Tool 2: Add to End (`appendChild`)</text>\n                <rect x=\"150\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Tool 3: Add to Beginning (`prepend`)</text>\n                <!-- Actions -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">Dynamic Building</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Create a new element (e.g., `<li>`)</text>\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Add it as the last child of a parent</text>\n                <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Add it as the first child of a parent</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Construct and Place</text>\n            </svg>\n            <p class=\"intro-explanation text-gray-600 leading-relaxed\">JavaScript provides the essential tools for DOM construction. `document.createElement('tagName')` allows you to create new elements. Once created, you can add them to the document using `.appendChild(newElement)` to place them at the end of a parent's children, or `.prepend(newElement)` to insert them at the beginning. These methods are fundamental for building dynamic content like lists, menus, or any dynamically generated UI elements.</p>\n            <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Your DOM toolkit: Create, append, and prepend!</p>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "questions": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 13: Creating and Appending Elements (createElement, appendChild, prepend)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Test Your DOM Building Skills!</h2>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 1: What is the JavaScript method to create a new HTML element?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It is <strong>`document.createElement('tagName')`</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 2: What does `document.createElement('div')` return?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns a new <strong>Element object</strong> representing a `<div>` element, but it's not yet attached to the DOM.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- JS Code -->\n                    <rect x=\"50\" y=\"100\" width=\"500\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: const newDiv = document.createElement(\"div\");</text>\n                    <text x=\"300\" y=\"155\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Creates a <div> element object in memory</text>\n                    <text x=\"300\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">It's not on the page yet!</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 3: What does `parentElement.appendChild(newChild)` do?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It adds the `newChild` node as the <strong>last child</strong> of the `parentElement`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 4: What does `parentElement.prepend(newChild)` do?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It adds the `newChild` node as the <strong>first child</strong> of the `parentElement`.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Parent -->\n                    <rect x=\"250\" y=\"50\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"70\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Parent</text>\n                    <!-- Existing Children -->\n                    <rect x=\"150\" y=\"100\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"200\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">Child 1</text>\n                    <rect x=\"250\" y=\"140\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"160\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#2E7D32\">Child 2</text>\n                    <!-- New Element -->\n                    <rect x=\"450\" y=\"100\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E64A19\">New Child</text>\n                    <!-- Connecting Lines -->\n                    <line x1=\"300\" y1=\"80\" x2=\"150\" y2=\"100\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"130\" x2=\"250\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"170\" x2=\"300\" y2=\"180\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"170\" x2=\"450\" y2=\"100\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <!-- JS Call -->\n                    <rect x=\"350\" y=\"190\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: parent.prepend(newChild);</text>\n                    <text x=\"450\" y=\"235\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Inserts new child at the START</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 3: Create and Append a List Item</h3>\n        <p class=\"text-gray-600 mb-3\">Write the JavaScript to create a new `<li>` element, set its text content to \"New Item\", and append it to an existing `<ul>` with the ID \"myList\".</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>// 1. Create the new list item element\nconst newItem = document.createElement(\"li\");\n\n// 2. Set its text content\nnewItem.textContent = \"New Item\";\n\n// 3. Find the parent UL\nconst myList = document.getElementById(\"myList\");\n\n// 4. Append the new list item to the UL\nif (myList) {\n  myList.appendChild(newItem);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 4: Create and Prepend a Heading</h3>\n        <p class=\"text-gray-600 mb-3\">Create a new `<h2>` element, set its text content to \"Important Section\", and prepend it to the `<body>` element.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>// 1. Create the new heading element\nconst newHeading = document.createElement(\"h2\");\n\n// 2. Set its text content\nnewHeading.textContent = \"Important Section\";\n\n// 3. Prepend it to the document's body\n// The 'document.body' is a direct reference to the <body> element\nif (document.body) {\n  document.body.prepend(newHeading);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 5: What happens if you append an element that's already in the DOM?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> If you `appendChild()` or `prepend()` an element that is already part of the DOM, it will be <strong>moved</strong> from its current position to the new position. It won't be duplicated.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Parent 1 -->\n                    <rect x=\"50\" y=\"100\" width=\"200\" height=\"50\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"150\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Parent A</text>\n                    <!-- Element to Move -->\n                    <rect x=\"50\" y=\"150\" width=\"200\" height=\"50\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"150\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E65100\">Element X</text>\n                    <!-- Parent 2 -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"50\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Parent B</text>\n                    <!-- JS Action -->\n                    <rect x=\"350\" y=\"180\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: parentB.appendChild(elementX);</text>\n                    <!-- Connection -->\n                    <line x1=\"300\" y1=\"150\" x2=\"300\" y2=\"180\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"180\" x2=\"350\" y2=\"180\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <path d=\"M300 180 Q 350 180 400 190\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 190 385 200 385 180\" fill=\"#7CB342\"/>\n                    <text x=\"350\" y=\"195\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#33691E\">Element X MOVED</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 5: Creating an Image Element</h3>\n        <p class=\"text-gray-600 mb-3\">Write the JavaScript to create a new `<img>` element.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newImage = document.createElement(\"img\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 6: Setting Attributes on a New Element</h3>\n        <p class=\"text-gray-600 mb-3\">After creating the `newImage` element in the previous exercise, set its `src` attribute to \"photo.jpg\" and its `alt` attribute to \"A photo\".</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (newImage) {\n  newImage.setAttribute(\"src\", \"photo.jpg\");\n  newImage.setAttribute(\"alt\", \"A photo\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 7: Appending the New Image</h3>\n        <p class=\"text-gray-600 mb-3\">Now, append the `newImage` element (created and configured in previous exercises) to the `<body>` of the document.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (newImage && document.body) {\n  document.body.appendChild(newImage);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 8: Prepending a New Paragraph</h3>\n        <p class=\"text-gray-600 mb-3\">Create a new `<p>` element, set its `textContent` to \"This is a new paragraph.\", and prepend it to the `<div>` with ID \"content-area\".</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newPara = document.createElement(\"p\");\nnewPara.textContent = \"This is a new paragraph.\";\n\nconst contentArea = document.getElementById(\"content-area\");\nif (contentArea) {\n  contentArea.prepend(newPara);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 9: What is the difference between `appendChild` and `prepend`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `appendChild()` adds a new node as the <strong>last child</strong> of a parent, while `prepend()` adds it as the <strong>first child</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 10: Can `createElement` create elements with attributes already set?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> No, `createElement()` only creates the element itself based on the tag name. You must set attributes separately using methods like `setAttribute()` or by accessing properties directly (e.g., `img.src = '...'`) after creation.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 11: Creating and Appending Text</h3>\n        <p class=\"text-gray-600 mb-3\">How do you create a new text node and append it to an existing paragraph element?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You use `document.createTextNode()` to create the text node and then `appendChild()` to add it:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newTextNode = document.createTextNode(\"Some text content\");\nconst existingPara = document.getElementById(\"myParagraph\");\nif (existingPara) {\n  existingPara.appendChild(newTextNode);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 12: Appending vs. Prepending</h3>\n        <p class=\"text-gray-600 mb-3\">If you `appendChild()` a new element and then `prepend()` another new element to the same parent, in what order will they appear?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> The element added with `prepend()` will appear first, followed by the original children, and then the element added with `appendChild()` will appear last. The order is: `newPrependedElement`, `originalChildren`, `newAppendedElement`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 13: Creating a complete list item</h3>\n        <p class=\"text-gray-600 mb-3\">Create a new `<li>` element, set its `textContent` to \"Dynamic Item\", and append it to a `<ul>` with ID \"dynamicList\".</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newItem = document.createElement(\"li\");\nnewItem.textContent = \"Dynamic Item\";\n\nconst dynamicList = document.getElementById(\"dynamicList\");\nif (dynamicList) {\n  dynamicList.appendChild(newItem);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 14: Why is creating elements with JS useful?</h3>\n        <p class=\"text-gray-600 mb-3\">What are some common scenarios where you would use `createElement`, `appendChild`, or `prepend`?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Common scenarios include:\n                <ul>\n                    <li>Dynamically adding items to a list (e.g., from user input or data).</li>\n                    <li>Creating new sections or content based on user actions.</li>\n                    <li>Building UI components programmatically.</li>\n                    <li>Inserting elements before or after existing content.</li>\n                </ul>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 15: What happens if the parent element doesn't exist?</h3>\n        <p class=\"text-gray-600 mb-3\">If you try to `appendChild()` a new element to a parent element that you haven't correctly selected (e.g., it returns `null`), what will happen?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You will get a <strong>JavaScript error</strong> because you cannot call a method (`appendChild` or `prepend`) on `null` or `undefined`. It's important to check if the parent element was found before trying to append to it.\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "display_order": 13,
  "created_at": "2025-06-29 16:06:33",
  "updated_at": "2025-06-30 08:22:20",
  "exercises": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 13: Creating and Appending Elements (createElement, appendChild, prepend)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Let's Build Something New in the DOM!</h2>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 1: Create a Simple Paragraph</h3>\n        <p class=\"text-gray-600 mb-3\">Write the JavaScript to create a new `<p>` element.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newParagraph = document.createElement(\"p\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 2: Add Text to the New Element</h3>\n        <p class=\"text-gray-600 mb-3\">Take the `newParagraph` element created above and set its text content to \"This is dynamically added text.\"</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (newParagraph) {\n  newParagraph.textContent = \"This is dynamically added text.\";\n}</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- JS Code -->\n                    <rect x=\"50\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"150\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: const newP = document.createElement(\"p\");</text>\n                    <rect x=\"50\" y=\"180\" width=\"500\" height=\"80\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E65100\">newP.textContent = \"This is dynamically added text.\";</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 3: Append the New Paragraph</h3>\n        <p class=\"text-gray-600 mb-3\">Find the `<body>` element and append the `newParagraph` (created in the previous exercises) to it.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>// Assuming newParagraph is already created and configured\nif (newParagraph && document.body) {\n  document.body.appendChild(newParagraph);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 4: Prepend a New Heading</h3>\n        <p class=\"text-gray-600 mb-3\">Create an `<h1>` element, set its text to \"New Section Title\", and prepend it to the `div` with `id=\"mainContent\"`.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newHeading = document.createElement(\"h1\");\nnewHeading.textContent = \"New Section Title\";\n\nconst mainContentDiv = document.getElementById(\"mainContent\");\nif (mainContentDiv) {\n  mainContentDiv.prepend(newHeading);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 5: Create and Append an Image</h3>\n        <p class=\"text-gray-600 mb-3\">Create a new `<img>` element, set its `src` to \"logo.png\" and `alt` to \"Company Logo\", then append it to the `<body>`.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newImg = document.createElement(\"img\");\nnewImg.src = \"logo.png\";\nnewImg.alt = \"Company Logo\";\n\nif (document.body) {\n  document.body.appendChild(newImg);\n}</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Body -->\n                    <rect x=\"50\" y=\"50\" width=\"500\" height=\"200\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"100\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#1976D2\">Body Element</text>\n                    <!-- New Image -->\n                    <rect x=\"150\" y=\"150\" width=\"300\" height=\"100\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"300\" y=\"200\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">img element (src=\"logo.png\")</text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"50\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"85\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: const img = createElement(\"img\");</text>\n                    <text x=\"450\" y=\"110\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">img.src = \"logo.png\";</text>\n                    <text x=\"450\" y=\"135\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">body.appendChild(img);</text>\n                    <!-- Connection -->\n                    <path d=\"M300 150 Q 350 150 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 5: What happens if the parent element doesn't exist?</h3>\n        <p class=\"text-gray-600 mb-3\">If you try to `appendChild()` a new element to a parent that hasn't been selected correctly (e.g., `document.getElementById('nonExistent')`), what error might you encounter?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You will likely get a <strong>TypeError</strong> because you're trying to call a method (`appendChild` or `prepend`) on `null` (the return value when an element is not found). Always check if the parent element exists first.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 6: Creating and Appending a `div`</h3>\n        <p class=\"text-gray-600 mb-3\">Create a new `div` element, give it the text \"New Box\", and append it to the `body`.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newDiv = document.createElement(\"div\");\nnewDiv.textContent = \"New Box\";\n\nif (document.body) {\n  document.body.appendChild(newDiv);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 7: Creating and Prepending a `span`</h3>\n        <p class=\"text-gray-600 mb-3\">Create a `<span>` element with the text \"Important:\", and prepend it to the paragraph with `id=\"mainText\"`.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newSpan = document.createElement(\"span\");\nnewSpan.textContent = \"Important: \";\n\nconst mainTextPara = document.getElementById(\"mainText\");\nif (mainTextPara) {\n  mainTextPara.prepend(newSpan);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 8: Creating and Appending with Attributes</h3>\n        <p class=\"text-gray-600 mb-3\">Create an `<a>` element, set its `href` to \"https://example.com\", its `textContent` to \"Visit Example\", and append it to a `div` with `id=\"linkContainer\"`.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newLink = document.createElement(\"a\");\nnewLink.href = \"https://example.com\"; // Direct property access is common for href, src etc.\n// Alternatively: newLink.setAttribute(\"href\", \"https://example.com\");\nnewLink.textContent = \"Visit Example\";\n\nconst linkContainerDiv = document.getElementById(\"linkContainer\");\nif (linkContainerDiv) {\n  linkContainerDiv.appendChild(newLink);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 9: Appending text directly</h3>\n        <p class=\"text-gray-600 mb-3\">Can you use `appendChild()` to add a plain string like \"Hello\" directly? What should you do instead?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> No, `appendChild()` expects a <strong>Node object</strong> (like an element node or text node). To add plain text, you should first create a Text Node using `document.createTextNode('Hello')` or set the `textContent` property of an element after creating it.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 10: What if you want to insert multiple elements?</h3>\n        <p class=\"text-gray-600 mb-3\">You have an array of new elements. How do you append them all to a parent element?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would typically loop through the array and `appendChild()` each element:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newElements = [createEl('p'), createEl('div')]; // Array of created elements\nconst parent = document.getElementById(\"myParent\");\nif (parent) {\n  newElements.forEach(el => {\n    parent.appendChild(el);\n  });\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 11: Prepending text</h3>\n        <p class=\"text-gray-600 mb-3\">How do you prepend the text \"Note: \" to an existing paragraph identified by `id=\"mainText\"`?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You need to create a text node first, then prepend it:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const textNode = document.createTextNode(\"Note: \");\nconst mainTextPara = document.getElementById(\"mainText\");\nif (mainTextPara) {\n  mainTextPara.prepend(textNode);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 12: Appending vs. Prepending</h3>\n        <p class=\"text-gray-600 mb-3\">What is the key difference in the final position of an element when using `appendChild()` versus `prepend()`?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `appendChild()` adds the element as the <strong>last child</strong>, while `prepend()` adds it as the <strong>first child</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 13: Creating an element with attributes</h3>\n        <p class=\"text-gray-600 mb-3\">Create a new `<a>` element, set its `href` to \"#\" and its `textContent` to \"Click Here\", then append it to the `<body>`.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const newLink = document.createElement(\"a\");\nnewLink.href = \"#\";\nnewLink.textContent = \"Click Here\";\n\nif (document.body) {\n  document.body.appendChild(newLink);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 14: What if you need to insert an element in the middle?</h3>\n        <p class=\"text-gray-600 mb-3\">`appendChild` adds to the end, `prepend` adds to the beginning. What if you need to insert an element between two existing children?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would typically use methods like <strong>`insertBefore()`</strong> (which takes the new node and the reference node before which to insert it) or `append()` / `prepend()` with careful selection of the target parent and potentially inserting before specific existing children. This is covered more in the next lesson on removing/replacing.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 15: Creating a dynamic list item</h3>\n        <p class=\"text-gray-600 mb-3\">Create a new `<li>` element, set its `textContent` to \"Item X\" (where X is a number), set its `id` to \"item-X\", and append it to a `<ul>` with `id=\"myList\"`.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const createListItem = (itemNumber) => {\n  const newItem = document.createElement(\"li\");\n  newItem.textContent = `Item ${itemNumber}`;\n  newItem.id = `item-${itemNumber}`;\n  return newItem;\n};\n\nconst myList = document.getElementById(\"myList\");\nif (myList) {\n  const item3 = createListItem(3);\n  myList.appendChild(item3);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "video": null,
  "intros": "<div class=\"tabs-container\">\n    <h2 class=\"text-3xl font-extrabold text-gray-800 mb-6 mt-6 text-center\">Lesson 13: Creating and Appending Elements (createElement, appendChild, prepend)</h2>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">You can read and change content and attributes, but what if you need to add entirely new elements to your page? Let's learn how to build and insert!</p>\n\n    <!-- Hidden radio buttons that control the state of the tabs -->\n    <input type=\"radio\" id=\"tab1\" name=\"tabs\" checked>\n    <input type=\"radio\" id=\"tab2\" name=\"tabs\">\n    <input type=\"radio\" id=\"tab3\" name=\"tabs\">\n    <input type=\"radio\" id=\"tab4\" name=\"tabs\">\n    <input type=\"radio\" id=\"tab5\" name=\"tabs\">\n\n    <!-- Tab Header Buttons (styled labels) - should be horizondal for both mobile and desktop -->\n    <div class=\"tabs-header flex flex-row bg-gray-50 border-b border-gray-200 text-sm font-medium text-center text-gray-600 rounded-t-lg overflow-hidden\">\n        <label for=\"tab1\" class=\"tab-label\" id=\"label1\" title=\"Intro 1: Building Blocks\">1</label>\n        <label for=\"tab2\" class=\"tab-label\" id=\"label2\" title=\"Intro 2: Making New Elements\">2</label>\n        <label for=\"tab3\" class=\"tab-label\" id=\"label3\" title=\"Intro 3: Adding to the End\">3</label>\n        <label for=\"tab4\" class=\"tab-label\" id=\"label4\" title=\"Intro 4: Adding to the Beginning\">4</label>\n        <label for=\"tab5\" class=\"tab-label\" id=\"label5\" title=\"Intro 5: The DOM Construction Kit\">5</label>\n    </div>\n\n    <!-- Tab Content Panels -->\n    <div class=\"tab-content-container p-6 sm:p-8\">\n        <!-- Tab 1 Content -->\n        <div class=\"tab-content content1\" id=\"content1\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 1: Building Blocks</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Think of the DOM as a construction site. How do you get new building blocks (like new elements) to start building with?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- Construction Site -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Construction Site (DOM)</text>\n                    <!-- Tools -->\n                    <rect x=\"1100\" y=\"100\" width=\"700\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JS Construction Kit</text>\n                    <rect x=\"1150\" y=\"200\" width=\"600\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Tool 1: createElement('div')</text>\n                    <rect x=\"1150\" y=\"300\" width=\"600\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Tool 2: appendChild(newElement)</text>\n                    <rect x=\"1150\" y=\"480\" width=\"600\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Tool 3: prepend(newElement)</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Build & Place New Elements</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">Creating new elements and adding them to the page is a core part of making web pages dynamic. JavaScript provides methods to act like a builder: you can `createElement()` to make a new element from scratch, `appendChild()` to add it as the last child of another element, and `prepend()` to add it as the first child. This allows you to construct parts of your page on the fly.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Build and place elements: Create new parts for your web page!</p>\n            </div>\n        </div>\n        <!-- Tab 2 Content -->\n        <div class=\"tab-content content2\" id=\"content2\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 2: Making New Elements</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Before you can add an element to the page, you first need to create it. What JavaScript method is used to make a brand new HTML element?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- Raw Materials -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Raw Materials</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">HTML Tag Name: \"li\"</text>\n                    <!-- JavaScript Tool -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">The Tool</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">document.createElement(\"li\")</text>\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Creates a new <li> element object</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Make a New Element</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">Before you can add an element to the page, you need to create it in memory. JavaScript's `document.createElement('tagName')` method does exactly this. You pass the tag name (like `'div'`, `'p'`, `'li'`, `'img'`) as a string, and it returns a new, detached DOM element node that you can then configure and insert into the document.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">`createElement` is your blueprint for new elements.</p>\n            </div>\n        </div>\n        <!-- Tab 3 Content -->\n        <div class=\"tab-content content3\" id=\"content3\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 3: Adding to the End</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">You've created a new element. How do you place it at the very end of another element's list of children?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- Parent Element -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Parent Element</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/> <!-- Child 1 -->\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Child 1</text>\n                    <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/> <!-- Child 2 -->\n                    <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Child 2</text>\n                    <!-- New Element -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">New Element</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">New Paragraph (`p`)</text>\n                    <!-- JavaScript Action -->\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"330\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#D32F2F\">appendChild(newParagraph)</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Add to the End</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">Once you've created a new element (e.g., using `createElement`), you need to insert it into the DOM. The `.appendChild(newNode)` method is used to add a newly created node as the <strong>last child</strong> of a specified parent element. This is a very common operation for building lists or adding content dynamically at the end of a section.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Add to the end: `appendChild()` is your tool for appending!</p>\n            </div>\n        </div>\n        <!-- Tab 4 Content -->\n        <div class=\"tab-content content4\" id=\"content4\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 4: Adding to the Beginning</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">What if you need to insert a new element not at the end, but right at the beginning of a parent's children?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- Parent Element -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Parent Element</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/> <!-- Child 1 -->\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Existing Child 1</text>\n                    <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/> <!-- Child 2 -->\n                    <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Existing Child 2</text>\n                    <!-- New Element -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">New Element</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">New Paragraph (`p`)</text>\n                    <!-- JavaScript Action -->\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"330\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#D32F2F\">prepend(newParagraph)</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Add to the Beginning</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">Sometimes, you need to insert a new element at the very start of a parent's children, not the end. For this, JavaScript provides the `.prepend(newNode)` method. It inserts the `newNode` as the first child of the target parent element, shifting existing children down. This is useful for adding items like headers or notices at the top of a list or section.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Add to the start: `prepend()` places your new element at the beginning!</p>\n            </div>\n        </div>\n        <!-- Tab 5 Content -->\n        <div class=\"tab-content content5\" id=\"content5\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 5: The DOM Construction Kit</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Imagine you have a toolbox for building and adding things to your web page. What are the essential tools in that kit for creating and placing new elements?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- Tools -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">The Kit</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">1. Create: createElement('tag')</text>\n                    <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">2. Add to End: parent.appendChild(newElement)</text>\n                    <rect x=\"150\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">3. Add to Beginning: parent.prepend(newElement)</text>\n                    <!-- JavaScript -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">Dynamic Building</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Build a new list item (`<li>`)</text>\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Append it to the `<ul>`</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Create and Insert Elements</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">JavaScript gives you a basic construction kit for the DOM. You can `createElement()` to forge new elements from raw tag names. Once created, you can place them into the document structure using `.appendChild()` to add them at the end of a parent's children, or `.prepend()` to insert them at the beginning. This empowers you to build dynamic content on the fly.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Build and place: Construct new DOM elements and add them where needed!</p>\n            </div>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "summary": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 13: Creating and Appending Elements (createElement, appendChild, prepend)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Lesson Summary</h2>\n\n    <div class=\"summary-container bg-gray-50 p-6 rounded-lg shadow-md\">\n        <div class=\"flex flex-col lg:flex-row items-center lg:items-start gap-8 mb-8\">\n            <div class=\"lg:w-1/2\">\n                <h3 class=\"text-2xl font-bold text-gray-800 mb-4\">Building and Inserting Elements</h3>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    JavaScript empowers you to dynamically add new elements to your web page, essentially building parts of the DOM from scratch. This is fundamental for creating interactive features like adding items to a list, showing/hiding content, or constructing complex UI components.\n                </p>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    The process involves two main steps: first, creating the new element using `document.createElement('tagName')`, and second, inserting it into the DOM tree using methods like `appendChild()` (to add at the end) or `prepend()` (to add at the beginning) of a parent element.\n                </p>\n                <h4 class=\"text-xl font-semibold text-gray-700 mb-3\">Key Concepts:</h4>\n                <ul class=\"list-disc list-inside text-gray-600 ml-4\">\n                    <li><strong>`document.createElement(tagName)`:</strong> Creates a new HTML element node in memory.</li>\n                    <li><strong>`.appendChild(newNode)`:</strong> Inserts `newNode` as the <strong>last child</strong> of the target element.</li>\n                    <li><strong>`.prepend(newNode)`:</strong> Inserts `newNode` as the <strong>first child</strong> of the target element.</li>\n                    <li>These methods allow for dynamic content generation and modification.</li>\n                </ul>\n            </div>\n            <div class=\"lg:w-1/2 flex justify-center\">\n                <!-- SVG Illustration: Create and Append/Prepend -->\n                <svg class=\"h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"10\" fill=\"#F8F9FA\"/>\n                    <!-- Parent Element -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Parent Element</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/> <!-- Child 1 -->\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Existing Child 1</text>\n                    <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/> <!-- Child 2 -->\n                    <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Existing Child 2</text>\n                    <!-- New Element Creation -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">New Element</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Created Element (`p`)</text>\n                    <!-- Actions -->\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"330\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Append: Adds to END</text>\n                    <rect x=\"1100\" y=\"380\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"410\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#BF360C\">Prepend: Adds to START</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Build and Insert</text>\n                </svg>\n            </div>\n        </div>\n\n        <div class=\"bg-purple-50 border-l-4 border-purple-500 text-purple-700 p-4 rounded-r-lg mb-6\" role=\"alert\">\n            <p class=\"font-bold\">Key Takeaway:</p>\n            <p>Use `document.createElement()` to make new elements, then `appendChild()` or `prepend()` to add them to the DOM. This is how dynamic content is built.</p>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->"
}