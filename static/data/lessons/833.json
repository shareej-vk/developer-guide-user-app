{
  "id": 833,
  "unit_id": 83,
  "title": "Lesson 6: Accessing Elements with querySelector and querySelectorAll",
  "slug": "lesson_6_accessing_elements_with_queryselector_and_queryselectorall",
  "content": "<div class=\"pt-6\">\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 6: Accessing Elements with querySelector and querySelectorAll</h1>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">\n        You've learned to find elements by their unique ID. But what if you need to find elements by their class, tag, or a more complex CSS rule? These methods are your Swiss Army knife!\n    </p>\n\n    <!-- Illustration: Using CSS selectors in JavaScript -->\n    <div class=\"flex justify-center mb-8\">\n        <svg class=\"h-64 w-full max-w-2xl\" viewBox=\"0 0 1920 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"1920\" height=\"500\" rx=\"10\" fill=\"#F0F4F8\"/>\n            <!-- HTML Structure -->\n            <rect x=\"100\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n            <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#E65100\">HTML Page Structure</text>\n            <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-width=\"1\"/> <!-- Item with class -->\n            <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">A button with class=\"cta-button\"</text>\n            <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-width=\"1\"/> <!-- Multiple items -->\n            <rect x=\"150\" y=\"480\" width=\"700\" height=\"50\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-width=\"1\"/>\n            <text x=\"500\" y=\"510\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">List items with class=\"list-item\"</text>\n            <rect x=\"150\" y=\"580\" width=\"700\" height=\"50\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n            <!-- JavaScript -->\n            <rect x=\"1000\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n            <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#1976D2\">JavaScript Tools</text>\n            <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">querySelector('.cta-button')</text>\n            <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">querySelectorAll('.list-item')</text>\n            <!-- Connection -->\n            <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n            <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n            <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Uses CSS Selectors</text>\n        </svg>\n        <p class=\"intro-explanation text-gray-600 leading-relaxed\">You already speak the language of CSS selectors! `document.querySelector()` and `document.querySelectorAll()` are JavaScript methods that let you use this powerful syntax to find elements. Need the first element with a specific class? Or all paragraphs inside a particular div? These methods are your go-to tools, offering incredible flexibility to select exactly what you need from the DOM.</p>\n        <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Master CSS selectors, master DOM searching!</p>\n    </div>\n    <!-- Tab 2 Content -->\n    <div class=\"tab-content content2\" id=\"content2\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 2: Finding One vs. Finding Many</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Sometimes you need one specific thing, other times you need a whole group. How do `querySelector` and `querySelectorAll` handle these different needs?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- Target: One -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"400\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">querySelector</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-width=\"1\"/> <!-- Selector -->\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Finds the FIRST element matching \".special-item\"</text>\n                <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-width=\"1\"/>\n                <!-- Target: Many -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"400\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">querySelectorAll</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/> <!-- Selector -->\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Finds ALL elements matching \"li.item\"</text>\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/> <!-- Multiple Items -->\n                <!-- Connection -->\n                <path d=\"M800 300 Q 900 300 1000 300\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1000 300 985 310 985 290\" fill=\"#7CB342\"/>\n                <text x=\"900\" y=\"305\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">One vs. All</text>\n            </svg>\n            <p class=\"intro-explanation text-gray-600 leading-relaxed\">`document.querySelector()` is your tool for finding the very first element that matches a given CSS selector. If you need all elements that match, `document.querySelectorAll()` is what you'll use. It returns a `NodeList`, which is like a list or array of all the found elements, allowing you to loop through them or apply changes to all of them at once.</p>\n            <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Need one? `querySelector`. Need all? `querySelectorAll`.</p>\n        </div>\n    </div>\n    <!-- Tab 3 Content -->\n    <div class=\"tab-content content3\" id=\"content3\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 3: The Power of CSS Syntax</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">You already know CSS selectors like `.className`, `#id`, `tagName`, and combinations. How does JavaScript let you use that same syntax to grab elements directly from the DOM?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- CSS Selectors -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">CSS Selectors</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Tag: `p`</text>\n                <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Class: `.highlight`</text>\n                <rect x=\"150\" y=\"480\" width=\"200\" height=\"50\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"250\" y=\"510\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">ID: `#main-title`</text>\n                <rect x=\"150\" y=\"580\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"630\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Descendant: `div p`</text>\n                <!-- JavaScript Methods -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JavaScript Equivalents</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">querySelector('p')</text>\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">querySelector('.highlight')</text>\n                <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">querySelector('#main-title')</text>\n                <rect x=\"1100\" y=\"650\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#D1C4E9\" stroke=\"#7E57C2\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"700\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#7E57C2\">querySelector('div p')</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Use CSS Syntax Directly!</text>\n            </svg>\n            <p class=\"intro-explanation text-gray-600 leading-relaxed\">`querySelector` and `querySelectorAll` bridge the gap between CSS styling and JavaScript manipulation. Instead of learning entirely new ways to select elements, you can use the CSS selectors you already know. This makes it incredibly intuitive to find elements based on their tags, classes, IDs, attributes, and even their position in the DOM tree, all within JavaScript.</p>\n            <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Your CSS knowledge is now your JavaScript searching power!</p>\n        </div>\n    </div>\n    <!-- Tab 4 Content -->\n    <div class=\"tab-content content4\" id=\"content4\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 4: Beyond Just IDs</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">`getElementById` is great for unique items. But what if you need to select all elements with a certain class, or the first `p` tag inside a `div`?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- HTML Structure -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Varied HTML</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/> <!-- Item 1 -->\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">First paragraph (`p`)</text>\n                <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/> <!-- Item 2 -->\n                <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Highlighted text (`span.highlight`)</text>\n                <rect x=\"150\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/> <!-- Item 3 -->\n                <text x=\"500\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">A button inside a div (`div button`)</text>\n                <!-- JavaScript Tools -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">Flexible JavaScript Tools</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">querySelector('p')</text>\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">querySelector('.highlight')</text>\n                <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">querySelector('div button')</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">CSS Power Unleashed</text>\n            </svg>\n            <p class=\"intro-explanation text-gray-600 leading-relaxed\">`querySelector` lets you use any valid CSS selector to grab the first matching element. Need all elements with a specific class? Use `querySelectorAll('.your-class')`. Want the first paragraph inside a specific div? Use `querySelector('div p')`. These methods are much more versatile than `getElementById` when you need to select elements based on criteria other than just a unique ID.</p>\n            <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Beyond IDs: CSS selectors give you precise control over element selection.</p>\n        </div>\n    </div>\n    <!-- Tab 4 Content -->\n    <div class=\"tab-content content4\" id=\"content4\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 4: Targeting with Precision</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Imagine you're playing a game of 'Where's Waldo?' for your HTML elements. How do `querySelector` and `querySelectorAll` help you find specific characters (elements) in the crowd (DOM)?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- Crowd of Elements -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Crowded Page (DOM)</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/> <!-- Waldo 1 -->\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Generic Person</text>\n                <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/> <!-- Waldo 2 -->\n                <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Another Person</text>\n                <rect x=\"150\" y=\"480\" width=\"200\" height=\"50\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/> <!-- Waldo 3 -->\n                <text x=\"250\" y=\"510\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Waldo! (class=\"find-me\")</text>\n                <rect x=\"150\" y=\"580\" width=\"700\" height=\"50\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/> <!-- Waldo 4 -->\n                <text x=\"500\" y=\"610\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Another Waldo! (class=\"find-me\")</text>\n                <!-- JavaScript Search -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JavaScript Search Tools</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">querySelector('.find-me') // Finds Waldo 3</text>\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">querySelectorAll('.find-me') // Finds Waldo 3 and 4</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Targeting Specific or Multiple</text>\n            </svg>\n            <p class=\"intro-explanation text-gray-600 leading-relaxed\">`querySelector` and `querySelectorAll` excel at precise targeting. `querySelector` acts like a detective looking for the first clue that matches your description (CSS selector). `querySelectorAll` acts like a team of detectives, finding every instance that matches your description and giving you a list to work with. This allows you to precisely select elements based on their class, tag, attributes, or even their position relative to other elements, making your JavaScript much more powerful.</p>\n            <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Precision is power: Find exactly what you need, whether it's one or many.</p>\n        </div>\n    </div>\n    <!-- Tab 5 Content -->\n    <div class=\"tab-content content5\" id=\"content5\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 5: Your CSS Selector Superpowers Unleashed</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">You already speak CSS! How can you use that language directly within JavaScript to find elements, making your code cleaner and more consistent?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- CSS Skills -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Your CSS Knowledge</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-width=\"1\"/>\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Selector: `.main-content`</text>\n                <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Selector: `h2`</text>\n                <rect x=\"150\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Selector: `div > p`</text>\n                <!-- JavaScript Tools -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JavaScript Tools</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">document.querySelector('.main-content')</text>\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">document.querySelector('h2')</text>\n                <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">document.querySelector('div p')</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Leverage Existing Skills!</text>\n            </svg>\n            <p class=\"intro-explanation text-gray-600 leading-relaxed\">Why learn a whole new way to select elements when your CSS skills can do the job? `querySelector` and `querySelectorAll` are designed to be intuitive for anyone who has used CSS. You can select by tag name (`'p'`), by class name (`'.my-class'`), by ID (`'#myId'`), or by combining them like CSS (`'div .content p'`). This consistency makes your code easier to write, read, and maintain.</p>\n            <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Your CSS selector knowledge is directly transferable to JavaScript.</p>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "questions": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 6: Accessing Elements with querySelector and querySelectorAll</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Let's Quiz Yourself on `querySelector` and `querySelectorAll`!</h2>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 1: What is the main advantage of `querySelector` and `querySelectorAll` over `getElementById`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Their main advantage is the ability to use <strong>any valid CSS selector</strong> (tag names, classes, IDs, attributes, combinations, etc.) for selection, offering much greater flexibility.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 2: What does `document.querySelector()` return?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns the <strong>first Element object</strong> in the document that matches the specified CSS selector, or `null` if no match is found.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 3: What does `document.querySelectorAll()` return?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns a <strong>NodeList</strong> (which is like an array) containing all Element objects in the document that match the specified CSS selector, or an empty NodeList if no matches are found.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Found Elements -->\n                    <rect x=\"50\" y=\"100\" width=\"200\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"150\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Element 1</text>\n                    <rect x=\"150\" y=\"150\" width=\"200\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"250\" y=\"170\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Element 2</text>\n                    <rect x=\"250\" y=\"190\" width=\"200\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"350\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Element 3</text>\n                    <!-- NodeList -->\n                    <rect x=\"350\" y=\"50\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"85\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">NodeList</text>\n                    <text x=\"450\" y=\"115\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">[Element 1, Element 2,</text>\n                    <text x=\"450\" y=\"140\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">Element 3]</text>\n                    <!-- Connection -->\n                    <path d=\"M300 150 Q 350 150 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                    <text x=\"350\" y=\"145\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#33691E\">Returns a collection</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 3: How do you select an element with the class \"menu-item\" using `querySelector`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would use:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelector(\".menu-item\");</code></pre>\n                The dot (`.`) signifies a class selector.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 4: How do you select all `<li>` elements that are direct children of a `<ul>` with the ID \"main-list\"?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would use `querySelectorAll` with the CSS selector:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelectorAll(\"#main-list > li\");</code></pre>\n                The `>` symbol signifies a direct child.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Target Elements -->\n                    <rect x=\"50\" y=\"100\" width=\"200\" height=\"30\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"150\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">li Element</text>\n                    <rect x=\"150\" y=\"150\" width=\"200\" height=\"30\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"250\" y=\"170\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">li Element</text>\n                    <rect x=\"250\" y=\"190\" width=\"200\" height=\"30\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"350\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">li Element</text>\n                    <!-- Parent -->\n                    <rect x=\"100\" y=\"50\" width=\"300\" height=\"30\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"250\" y=\"70\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E65100\">ul#main-list</text>\n                    <!-- Connecting Lines -->\n                    <line x1=\"250\" y1=\"80\" x2=\"150\" y2=\"100\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"250\" y1=\"80\" x2=\"250\" y2=\"150\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"250\" y1=\"180\" x2=\"250\" y2=\"190\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"250\" y1=\"220\" x2=\"250\" y2=\"240\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <!-- JS Call -->\n                    <rect x=\"350\" y=\"50\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"85\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: document.querySelectorAll(\"#main-list > li\");</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 5: What's the difference in the return type between `querySelector` and `querySelectorAll`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `querySelector` returns a single <strong>Element object</strong> (or `null`), while `querySelectorAll` returns a <strong>NodeList</strong> (a collection of Element objects).\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 6: Can `querySelector` use ID selectors?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Yes, it can. You would use the `#` prefix, just like in CSS. For example: `document.querySelector('#myUniqueId')`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 7: How would you select the first `<div>` element on the page?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would use `document.querySelector()` with the tag name selector:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelector(\"div\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 8: What is a `NodeList`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> A `NodeList` is a collection of nodes (usually Element objects) returned by methods like `querySelectorAll`. It's array-like, meaning you can often loop through it (e.g., using `forEach`) or access elements by index.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Found Elements -->\n                    <rect x=\"50\" y=\"100\" width=\"200\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"150\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">Element 1</text>\n                    <rect x=\"150\" y=\"150\" width=\"200\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"250\" y=\"170\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">Element 2</text>\n                    <rect x=\"250\" y=\"190\" width=\"200\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-2=\"2\"/>\n                    <text x=\"350\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">Element 3</text>\n                    <!-- NodeList Structure -->\n                    <rect x=\"350\" y=\"50\" width=\"200\" height=\"120\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"85\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">NodeList</text>\n                    <text x=\"450\" y=\"115\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">[Element 1, Element 2,</text>\n                    <text x=\"450\" y=\"140\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">Element 3]</text>\n                    <text x=\"450\" y=\"170\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">Can be looped through</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 9: What's the difference between `querySelector('.my-class')` and `getElementById('myClass')`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <ol class=\"list-decimal list-inside ml-4 mt-2\">\n                    <li>`document.querySelector('.my-class')`: Finds the <strong>first element</strong> with the class name \"my-class\".</li>\n                    <li>`document.getElementById('myClass')`: Finds the element with the <strong>exact ID</strong> \"myClass\". Note the different selector syntax (`.` for class, `#` for ID).</li>\n                </ol>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 10: How can you select an element that has a specific `data-*` attribute?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You can use attribute selectors with `querySelector` or `querySelectorAll`. For example, to find an element with `data-id=\"123\"`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelector('[data-id=\"123\"]');</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 11: Is `querySelector` case-sensitive for selectors?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Generally, CSS selectors are <strong>case-insensitive for element and attribute names</strong>, but <strong>case-sensitive for class names and IDs</strong> in some contexts or older browsers. However, it's best practice to match the case of your HTML `id` and `class` attributes for reliability.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 12: What's the benefit of using `querySelectorAll` to get a list of elements?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It allows you to easily <strong>iterate over multiple elements</strong> (e.g., with a `for` loop or `forEach`) and perform the same action on each of them, saving repetitive code.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 13: How do you select the first `<a>` tag within an element with the ID \"nav-menu\"?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would use `querySelector` with a descendant selector:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelector(\"#nav-menu a\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 14: What is the difference between `document.querySelector('#myId')` and `document.getElementById('myId')`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <ol class=\"list-decimal list-inside ml-4 mt-2\">\n                    <li>`document.getElementById('myId')`: Specifically designed for IDs, generally very fast.</li>\n                    <li>`document.querySelector('#myId')`: Uses CSS selector syntax; for IDs, it's functionally similar but more versatile for other selector types. It returns the first match.</li>\n                </ol>\n                For selecting by ID, `getElementById` is often preferred for its directness and historical convention, though `querySelector('#myId')` works perfectly too.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 15: What's the advantage of `querySelectorAll` when dealing with multiple elements?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> The advantage is that it returns a collection (NodeList) of <strong>all matching elements</strong>, allowing you to easily loop through them and apply actions to each one, rather than having to select them one by one or rely on less specific methods.\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "display_order": 6,
  "created_at": "2025-06-29 16:06:32",
  "updated_at": "2025-07-01 01:49:23",
  "exercises": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 6: Accessing Elements with querySelector and querySelectorAll</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Let's Practice Your CSS Selector Skills in JavaScript!</h2>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 1: Select the First Paragraph</h3>\n        <p class=\"text-gray-600 mb-3\">Given the HTML below, write the JavaScript using `querySelector` to select the first `<p>` element.</p>\n        <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code><p>This is the first paragraph.</p>\n<p>This is the second paragraph.</p></code></pre>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelector(\"p\");</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- HTML -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"40\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <p>First paragraph</p></text>\n                    <rect x=\"50\" y=\"150\" width=\"250\" height=\"40\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <p>Second paragraph</p></text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: document.querySelector(\"p\");</text>\n                    <!-- Connection -->\n                    <path d=\"M300 150 Q 350 150 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                    <text x=\"350\" y=\"145\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#33691E\">Selects the first 'p' found</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 2: Select All List Items</h3>\n        <p class=\"text-gray-600 mb-3\">Write the JavaScript using `querySelectorAll` to select all `<li>` elements within a `<ul>` that has the ID \"my-list\".</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelectorAll(\"#my-list li\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 3: Select by Class Name</h3>\n        <p class=\"text-gray-600 mb-3\">How would you select the first element that has the class \"important-message\"?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `querySelector`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelector(\".important-message\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 4: Selecting Nested Elements</h3>\n        <p class=\"text-gray-600 mb-3\">Write the CSS selector and the JavaScript code to find the first `<a>` tag that is a direct child of an element with the class \"navigation\".</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                CSS Selector: `.navigation > a`\n                JavaScript:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelector(\".navigation > a\");</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Parent Element -->\n                    <rect x=\"200\" y=\"50\" width=\"200\" height=\"30\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"70\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Parent: .navigation</text>\n                    <!-- Child Element -->\n                    <rect x=\"250\" y=\"100\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"300\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E64A19\">Child: a</text>\n                    <!-- Connection -->\n                    <line x1=\"300\" y1=\"80\" x2=\"300\" y2=\"100\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <!-- JS Call -->\n                    <rect x=\"350\" y=\"150\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E65100\">JS: document.querySelector(\".navigation > a\");</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 5: Selecting All Paragraphs</h3>\n        <p class=\"text-gray-600 mb-3\">Write the JavaScript to get a list of all `<p>` elements on the page.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelectorAll(\"p\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 6: What happens if `querySelector` finds nothing?</h3>\n        <p class=\"text-gray-600 mb-3\">If you use `document.querySelector('.non-existent-class')`, what will it return?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It will return <strong>`null`</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 7: What happens if `querySelectorAll` finds nothing?</h3>\n        <p class=\"text-gray-600 mb-3\">If you use `document.querySelectorAll('.non-existent-class')`, what will it return?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It will return an <strong>empty NodeList</strong> (e.g., `[]` or a NodeList with a `length` of 0), not `null`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 8: Selecting by Attribute</h3>\n        <p class=\"text-gray-600 mb-3\">How would you select the first element that has a `data-type` attribute set to \"user-profile\"?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `querySelector`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelector('[data-type=\"user-profile\"]');</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 9: Combining Selectors</h3>\n        <p class=\"text-gray-600 mb-3\">How would you select all `<a>` tags that have the class \"external-link\" and are inside an element with the ID \"footer\"?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `querySelectorAll`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelectorAll(\"#footer a.external-link\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 10: Selecting the first element with a specific attribute value</h3>\n        <p class=\"text-gray-600 mb-3\">How would you select the first `<img>` element that has a `alt` attribute containing the word \"logo\"?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `querySelector` with an attribute selector:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelector('img[alt*=\"logo\"]');</code></pre>\n                The `*=` means \"contains\".\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 11: Iterating over a NodeList</h3>\n        <p class=\"text-gray-600 mb-3\">You used `document.querySelectorAll('.item')` and got a NodeList. How would you change the text color of each element in that list to blue?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You can use `forEach` (if the NodeList supports it, which modern browsers do) or a `for` loop:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const items = document.querySelectorAll('.item');\nitems.forEach(item => {\n  item.style.color = 'blue';\n});</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 12: What's the difference between `querySelector` and `getElementById` when selecting by ID?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <ol class=\"list-decimal list-inside ml-4 mt-2\">\n                    <li>`document.getElementById('myId')`: Specifically for IDs, returns the first match or `null`.</li>\n                    <li>`document.querySelector('#myId')`: Uses CSS selector syntax, also returns the first match or `null`.</li>\n                </ol>\n                For IDs, `getElementById` is often slightly more performant and idiomatic, but `querySelector` is more versatile overall.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 13: Selecting an element with a specific attribute value</h3>\n        <p class=\"text-gray-600 mb-3\">Write the JavaScript to select the first `input` element that has the `type` attribute set to \"text\".</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `querySelector`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelector('input[type=\"text\"]');</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 14: Selecting multiple elements by tag name</h3>\n        <p class=\"text-gray-600 mb-3\">How would you select all `<img>` elements on the page?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `querySelectorAll`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelectorAll(\"img\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 15: When would you use `querySelectorAll` over `getElementById`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would use `querySelectorAll` when you need to select <strong>multiple elements</strong> that share a common characteristic (like a class name) or when you need to select elements based on selectors other than a unique ID (like tag names, classes, attributes, or combinations).\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "video": null,
  "intros": "<div class=\"tabs-container\">\n    <h2 class=\"text-3xl font-extrabold text-gray-800 mb-6 mt-6 text-center\">Lesson 6: Accessing Elements with querySelector and querySelectorAll</h2>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">Master the art of pinpointing any webpage element using powerful CSS-style selectors</p>                   \n\n    <div class=\"tab-content-container p-6 sm:p-8\">\n        <div class=\"tab-content content1\" id=\"content1\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">CSS Power in JavaScript</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">What if you could find ANY element on a webpage using the same selectors you already know from CSS?</h2>\n            \n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <!-- 16:9 Aspect Ratio SVG -->\n                <div class=\"w-full max-w-4xl mx-auto mb-6\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 800 450\" class=\"w-full h-auto bg-white rounded-lg\">\n                        <!-- Browser Window -->\n                        <rect x=\"50\" y=\"30\" width=\"700\" height=\"390\" fill=\"#F3F4F6\" stroke=\"#D1D5DB\" stroke-width=\"2\" rx=\"4\"/>\n                        \n                        <!-- Browser Header -->\n                        <rect x=\"50\" y=\"30\" width=\"700\" height=\"40\" fill=\"#E5E7EB\" rx=\"4\"/>\n                        <circle cx=\"70\" cy=\"50\" r=\"6\" fill=\"#EF4444\"/>\n                        <circle cx=\"90\" cy=\"50\" r=\"6\" fill=\"#FBBF24\"/>\n                        <circle cx=\"110\" cy=\"50\" r=\"6\" fill=\"#10B981\"/>\n                        \n                        <!-- Page Content -->\n                        <rect x=\"70\" y=\"90\" width=\"120\" height=\"30\" fill=\"#3B82F6\" rx=\"4\"/>\n                        <text x=\"130\" y=\"110\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"white\">Header</text>\n                        \n                        <rect x=\"70\" y=\"140\" width=\"250\" height=\"180\" fill=\"#F9FAFB\" stroke=\"#D1D5DB\" rx=\"4\"/>\n                        <text x=\"195\" y=\"160\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#4B5563\">Content Area</text>\n                        \n                        <circle cx=\"100\" cy=\"190\" r=\"15\" fill=\"#8B5CF6\"/>\n                        <text x=\"100\" y=\"220\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#4B5563\">.item</text>\n                        \n                        <circle cx=\"160\" cy=\"190\" r=\"15\" fill=\"#8B5CF6\"/>\n                        <text x=\"160\" y=\"220\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#4B5563\">.item</text>\n                        \n                        <circle cx=\"220\" cy=\"190\" r=\"15\" fill=\"#8B5CF6\"/>\n                        <text x=\"220\" y=\"220\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#4B5563\">.item</text>\n                        \n                        <rect x=\"340\" y=\"90\" width=\"350\" height=\"230\" fill=\"#FEF2F2\" stroke=\"#FECACA\" rx=\"4\"/>\n                        <text x=\"515\" y=\"110\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#DC2626\">JavaScript Console</text>\n                        \n                        <!-- Selector Example -->\n                        <text x=\"515\" y=\"150\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#1E40AF\">document.querySelector('.item')</text>\n                        <text x=\"515\" y=\"190\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#1E40AF\">document.querySelectorAll('.item')</text>\n                        \n                        <!-- Visualizing Selection -->\n                        <path d=\"M 515 160 L 100 190\" stroke=\"#10B981\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 515 200 L 100 190\" stroke=\"#10B981\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 515 200 L 160 190\" stroke=\"#10B981\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 515 200 L 220 190\" stroke=\"#10B981\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        \n                        <circle cx=\"100\" cy=\"190\" r=\"20\" stroke=\"#10B981\" stroke-width=\"3\" fill=\"none\"/>\n                        <circle cx=\"160\" cy=\"190\" r=\"20\" stroke=\"#10B981\" stroke-width=\"3\" fill=\"none\"/>\n                        <circle cx=\"220\" cy=\"190\" r=\"20\" stroke=\"#10B981\" stroke-width=\"3\" fill=\"none\"/>\n                        \n                        <!-- Magnifying Glass -->\n                        <circle cx=\"600\" cy=\"280\" r=\"30\" fill=\"none\" stroke=\"#1E40AF\" stroke-width=\"3\"/>\n                        <line x1=\"620\" y1=\"300\" x2=\"650\" y2=\"330\" stroke=\"#1E40AF\" stroke-width=\"3\"/>\n                    </svg>\n                </div>\n                \n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">\n                    Imagine you have a magic wand that can instantly find any element on a webpage - that's exactly what <code class=\"bg-gray-200 px-1 rounded\">querySelector</code> and <code class=\"bg-gray-200 px-1 rounded\">querySelectorAll</code> give you! These powerful methods let you locate elements using the same CSS selectors you already know. \n                </p>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed mt-4\">\n                    Whether you need to find a single button or all images in a gallery, these tools work exactly like CSS styling but for JavaScript interaction. The best part? You can combine classes, IDs, and element types in any combination - just like in your stylesheets!\n                </p>                \n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">\n                    \"One selector to find them all - your CSS knowledge is now your JavaScript superpower!\"\n                </p>\n            </div> \n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "summary": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 6: Accessing Elements with querySelector and querySelectorAll</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Lesson Summary</h2>\n\n    <div class=\"summary-container bg-gray-50 p-6 rounded-lg shadow-md\">\n        <div class=\"flex flex-col lg:flex-row items-center lg:items-start gap-8 mb-8\">\n            <div class=\"lg:w-1/2\">\n                <h3 class=\"text-2xl font-bold text-gray-800 mb-4\">Leveraging CSS Selectors</h3>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    JavaScript provides powerful methods, `document.querySelector()` and `document.querySelectorAll()`, that allow you to select elements using familiar CSS selector syntax. This makes element selection flexible and intuitive.\n                </p>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    These methods bridge the gap between styling and manipulating elements, enabling you to target precisely what you need based on tags, classes, IDs, attributes, and their relationships within the DOM.\n                </p>\n                <h4 class=\"text-xl font-semibold text-gray-700 mb-3\">Key Methods:</h4>\n                <ul class=\"list-disc list-inside text-gray-600 ml-4\">\n                    <li><strong>`document.querySelector(selector)`:</strong> Finds and returns the <strong>first</strong> element matching the CSS selector. Returns `null` if no match.</li>\n                    <li><strong>`document.querySelectorAll(selector)`:</strong> Finds and returns <strong>all</strong> elements matching the CSS selector as a <code>NodeList</code>. Returns an empty NodeList if no matches.</li>\n                </ul>\n            </div>\n            <div class=\"lg:w-1/2 flex justify-center\">\n                <!-- SVG Illustration: querySelector vs querySelectorAll -->\n                <svg class=\"h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"10\" fill=\"#F8F9FA\"/>\n                    <!-- DOM Structure -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">DOM Structure</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/> <!-- Element 1 -->\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Element A</text>\n                    <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/> <!-- Element 2 -->\n                    <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Element B</text>\n                    <rect x=\"150\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/> <!-- Element 3 -->\n                    <!-- JavaScript Tools -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JavaScript Tools</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">querySelector('.specific-class')</text>\n                    <text x=\"1450\" y=\"260\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Returns: Element B</text>\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">querySelectorAll('.item')</text>\n                    <text x=\"1450\" y=\"380\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Returns: NodeList [Element 1, Element 2]</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Targeting Flexibility</text>\n                </svg>\n            </div>\n        </div>\n\n        <div class=\"bg-blue-50 border-l-4 border-blue-500 text-blue-700 p-4 rounded-r-lg mb-6\" role=\"alert\">\n            <p class=\"font-bold\">Summary:</p>\n            <p>`querySelector` is for finding the first match, while `querySelectorAll` is for finding all matches. Both use CSS selectors, offering a powerful and flexible way to access elements in the DOM.</p>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->"
}