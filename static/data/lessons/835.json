{
  "id": 835,
  "unit_id": 83,
  "title": "Lesson 8: Traversing the DOM (Parent, Child, Siblings)",
  "slug": "lesson_8_traversing_the_dom_parent_child_siblings",
  "content": "<div class=\"pt-6\">\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 8: Traversing the DOM (Parent, Child, Siblings)</h1>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">\n        You know how to find specific elements. Now, let's learn how to navigate the DOM like a pro, moving between related elements!\n    </p>\n\n    <!-- Illustration: DOM Tree Navigation -->\n    <div class=\"flex justify-center mb-8\">\n        <svg class=\"h-64 w-full max-w-2xl\" viewBox=\"0 0 1920 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"1920\" height=\"500\" rx=\"10\" fill=\"#F0F4F8\"/>\n            <!-- DOM Tree -->\n            <rect x=\"960\" y=\"50\" width=\"120\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n            <text x=\"1020\" y=\"80\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#1976D2\">Document</text>\n            <line x1=\"1020\" y1=\"90\" x2=\"1020\" y2=\"150\" stroke=\"#757575\" stroke-width=\"2\"/>\n            <rect x=\"850\" y=\"150\" width=\"220\" height=\"40\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n            <text x=\"960\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">html</text>\n            <line x1=\"960\" y1=\"190\" x2=\"850\" y2=\"250\" stroke=\"#757575\" stroke-width=\"2\"/>\n            <line x1=\"960\" y1=\"190\" x2=\"1050\" y2=\"250\" stroke=\"#757575\" stroke-width=\"2\"/>\n            <rect x=\"750\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-width=\"2\"/>\n            <text x=\"825\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">head</text>\n            <rect x=\"1050\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-width=\"2\"/>\n            <text x=\"1125\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">body</text>\n            <rect x=\"1050\" y=\"350\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n            <text x=\"1125\" y=\"380\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#2E7D32\">p (Current Element)</text>\n            <!-- Navigation Arrows -->\n            <path d=\"M1125 390 L 1125 450\" stroke=\"#FF7043\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Parent -->\n            <polygon points=\"1125 450 1110 460 1110 440\" fill=\"#FF7043\"/>\n            <path d=\"M1125 390 L 1050 450\" stroke=\"#4FC3F7\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Sibling -->\n            <polygon points=\"1050 450 1035 460 1035 440\" fill=\"#4FC3F7\"/>\n            <path d=\"M1125 390 L 1125 550\" stroke=\"#90CAF9\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Child -->\n            <polygon points=\"1125 550 1110 560 1110 540\" fill=\"#90CAF9\"/>\n            <text x=\"900\" y=\"465\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#FF7043\">Go to Parent</text>\n            <text x=\"900\" y=\"430\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#4FC3F7\">Go to Sibling</text>\n            <text x=\"1150\" y=\"565\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#90CAF9\">Go to Child</text>\n        </svg>\n        <p class=\"intro-explanation text-gray-600 leading-relaxed\">Once you select an element using methods like `getElementById`, `querySelector`, or others, you often need to find its relatives in the DOM tree. JavaScript provides convenient properties to navigate these relationships: you can easily find the <strong>parent</strong> of an element, access its <strong>children</strong>, or move to its <strong>siblings</strong>. This traversal is essential for dynamic updates and understanding the context of an element.</p>\n        <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Navigate the DOM: Find parents, children, and siblings with simple properties!</p>\n    </div>\n\n    <!-- Tab 2 Content -->\n    <div class=\"tab-content content2\" id=\"content2\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 2: The DOM Family Tree</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Think of your HTML structure as a family tree. What terms describe the relationships between elements: parent, child, and sibling?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- DOM Tree -->\n                <rect x=\"960\" y=\"50\" width=\"120\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1020\" y=\"80\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#1976D2\">Document</text>\n                <rect x=\"850\" y=\"150\" width=\"220\" height=\"40\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"960\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">html</text>\n                <rect x=\"750\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/>\n                <text x=\"825\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">head (Sibling)</text>\n                <rect x=\"1050\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/>\n                <text x=\"1125\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">body (Child of html)</text>\n                <rect x=\"1050\" y=\"350\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                <text x=\"1125\" y=\"380\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#2E7D32\">p (Child of body)</text>\n                <rect x=\"1250\" y=\"350\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                <text x=\"1325\" y=\"380\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#2E7D32\">h1 (Child of body, Sibling of p)</text>\n                <!-- Connecting Lines -->\n                <line x1=\"960\" y1=\"190\" x2=\"960\" y2=\"250\" stroke=\"#757575\" stroke-width=\"2\"/>\n                <line x1=\"960\" y1=\"250\" x2=\"750\" y2=\"250\" stroke=\"#757575\" stroke-width=\"2\"/>\n                <line x1=\"960\" y1=\"250\" x2=\"1050\" y2=\"250\" stroke=\"#757575\" stroke-width=\"2\"/>\n                <line x1=\"1125\" y1=\"290\" x2=\"1125\" y2=\"350\" stroke=\"#757575\" stroke-width=\"2\"/>\n                <line x1=\"1125\" y1=\"390\" x2=\"1125\" y2=\"350\" stroke=\"#757575\" stroke-width=\"2\"/>\n                <line x1=\"1125\" y1=\"390\" x2=\"1250\" y2=\"350\" stroke=\"#757575\" stroke-width=\"2\"/>\n                <!-- Labels -->\n                <text x=\"600\" y=\"280\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#FF7043\">Parent: html</text>\n                <text x=\"1450\" y=\"380\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#2E7D32\">Parent: body</text>\n                <text x=\"1450\" y=\"420\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#2E7D32\">Siblings: h1</text>\n                <text x=\"850\" y=\"330\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">Sibling: head</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">The DOM structure is indeed like a family tree! An element containing another is its <strong>parent</strong>. An element directly inside another is its <strong>child</strong>. Elements sharing the same parent are called <strong>siblings</strong>. Understanding these relationships is key to navigating the DOM effectively with JavaScript.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Master the DOM family: Parent, Child, and Sibling relationships!</p>\n            </div>\n        </div>\n        <!-- Tab 3 Content -->\n        <div class=\"tab-content content3\" id=\"content3\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 3: Moving Up, Down, and Sideways</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Once you select an element, how do you easily jump to its parent, find all its children, or discover its siblings?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- DOM Tree -->\n                    <rect x=\"960\" y=\"50\" width=\"120\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1020\" y=\"80\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#1976D2\">Document</text>\n                    <rect x=\"850\" y=\"150\" width=\"220\" height=\"40\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"960\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">html</text>\n                    <rect x=\"750\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/>\n                    <text x=\"825\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">head</text>\n                    <rect x=\"1050\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/>\n                    <text x=\"1125\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">body</text>\n                    <rect x=\"1050\" y=\"350\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                    <text x=\"1125\" y=\"380\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#2E7D32\">p (Current Element)</text>\n                    <!-- Navigation Arrows -->\n                    <path d=\"M1125 390 L 1125 450\" stroke=\"#FF7043\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Parent -->\n                    <polygon points=\"1125 450 1110 460 1110 440\" fill=\"#FF7043\"/>\n                    <path d=\"M1125 390 L 1050 450\" stroke=\"#4FC3F7\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Sibling -->\n                    <polygon points=\"1050 450 1035 460 1035 440\" fill=\"#4FC3F7\"/>\n                    <path d=\"M1125 390 L 1125 550\" stroke=\"#90CAF9\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Child -->\n                    <polygon points=\"1125 550 1110 560 1110 540\" fill=\"#90CAF9\"/>\n                    <text x=\"900\" y=\"465\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#FF7043\">Go to Parent: `.parentElement`</text>\n                    <text x=\"900\" y=\"430\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#4FC3F7\">Go to Sibling: `.nextElementSibling`</text>\n                    <text x=\"1150\" y=\"565\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#90CAF9\">Go to Child: `.children`</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">JavaScript provides specific properties to navigate the DOM tree from a selected element. You can use `.parentElement` to go up one level, `.children` to get all direct children, and `.nextElementSibling` or `.previousElementSibling` to move to adjacent siblings. These tools allow you to explore the structure and relationships within your HTML dynamically.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Navigate relationships: Parent, Children, Siblings are just a property away!</p>\n            </div>\n        </div>\n        <!-- Tab 4 Content -->\n        <div class=\"tab-content content4\" id=\"content4\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 4: Finding Related Elements</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">If you find a list item (`<li>`), how do you easily find its parent `<ul>`, or the next `<li>` in the same list?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- DOM Tree -->\n                    <rect x=\"960\" y=\"50\" width=\"120\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1020\" y=\"80\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#1976D2\">Document</text>\n                    <rect x=\"850\" y=\"150\" width=\"220\" height=\"40\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"960\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">ul</text>\n                    <rect x=\"750\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/>\n                    <text x=\"825\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">li (Current)</text>\n                    <rect x=\"1050\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/>\n                    <text x=\"1125\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">li (Sibling)</text>\n                    <rect x=\"1050\" y=\"350\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                    <text x=\"1125\" y=\"380\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#2E7D32\">li (Sibling)</text>\n                    <!-- Arrows -->\n                    <path d=\"M1125 390 L 1125 450\" stroke=\"#FF7043\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Parent -->\n                    <polygon points=\"1125 450 1110 460 1110 440\" fill=\"#FF7043\"/>\n                    <path d=\"M1125 390 L 1050 450\" stroke=\"#4FC3F7\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Sibling -->\n                    <polygon points=\"1050 450 1035 460 1035 440\" fill=\"#4FC3F7\"/>\n                    <path d=\"M1125 390 L 1125 550\" stroke=\"#90CAF9\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Child -->\n                    <polygon points=\"1125 550 1110 560 1110 540\" fill=\"#90CAF9\"/>\n                    <text x=\"900\" y=\"465\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#FF7043\">Find Parent: .parentElement</text>\n                    <text x=\"900\" y=\"430\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#4FC3F7\">Find Next Sibling: .nextElementSibling</text>\n                    <text x=\"1150\" y=\"565\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#90CAF9\">Find All Children: .children</text>\n                    <text x=\"1150\" y=\"430\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#4FC3F7\">Find Previous Sibling: .previousElementSibling</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">The DOM tree provides properties to navigate these relationships. From a selected element, you can access its `.parentElement` to move up, `.children` to get all direct child elements, and `.nextElementSibling` or `.previousElementSibling` to move to adjacent siblings. This allows you to explore the DOM structure and find related elements efficiently.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Navigate the DOM: Go up, down, and sideways with built-in properties!</p>\n            </div>\n        </div>\n        <!-- Tab 5 Content -->\n        <div class=\"tab-content content5\" id=\"content5\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 5: Understanding Relationships</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">When you have an element, how does JavaScript help you understand its place in the family – its parent, siblings, or children?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- DOM Tree -->\n                    <rect x=\"960\" y=\"50\" width=\"120\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1020\" y=\"80\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#1976D2\">Document</text>\n                    <rect x=\"850\" y=\"150\" width=\"220\" height=\"40\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"960\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">html</text>\n                    <rect x=\"750\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/>\n                    <text x=\"825\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">head</text>\n                    <rect x=\"1050\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/>\n                    <text x=\"1125\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">body</text>\n                    <rect x=\"1050\" y=\"350\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                    <text x=\"1125\" y=\"380\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#2E7D32\">p (Current)</text>\n                    <!-- Navigation Properties -->\n                    <circle cx=\"1125\" cy=\"420\" r=\"30\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-width=\"2\"/>\n                    <text x=\"1125\" y=\"430\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">.parentElement</text>\n                    <circle cx=\"1050\" y=\"480\" r=\"30\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-width=\"2\"/>\n                    <text x=\"1050\" y=\"490\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">.previousElementSibling</text>\n                    <circle cx=\"1125\" y=\"540\" r=\"30\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-width=\"2\"/>\n                    <text x=\"1125\" y=\"550\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">.nextElementSibling</text>\n                    <circle cx=\"1125\" y=\"620\" r=\"30\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-width=\"2\"/>\n                    <text x=\"1125\" y=\"630\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">.children</text>\n                    <!-- Connection -->\n                    <path d=\"M1125 450 L 1125 420\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1125 420 1110 430 1110 410\" fill=\"#7CB342\"/>\n                    <text x=\"1000\" y=\"435\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#33691E\">Properties to Explore</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">The DOM tree is not just a static map; it's a connected structure. JavaScript provides properties like `.parentElement` to go up the tree, `.children` to access all direct descendants, and `.nextElementSibling` / `.previousElementSibling` to navigate horizontally among siblings. These tools allow you to explore the relationships between elements, which is fundamental for many dynamic web page manipulations.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Understand relationships to navigate the DOM effectively.</p>\n            </div>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "questions": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 8: Traversing the DOM (Parent, Child, Siblings)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Test Your DOM Navigation Skills!</h2>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 1: What does `.parentElement` return?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns the <strong>direct parent Element node</strong> of the current element, or `null` if the element has no parent (e.g., the `document` or `<html>` element).\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- DOM Tree -->\n                    <rect x=\"250\" y=\"50\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"70\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Parent Element</text>\n                    <line x1=\"300\" y1=\"80\" x2=\"300\" y2=\"120\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <rect x=\"200\" y=\"120\" width=\"200\" height=\"30\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"140\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E65100\">Current Element</text>\n                    <!-- JS Property -->\n                    <rect x=\"350\" y=\"180\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: currentElement.parentElement</text>\n                    <text x=\"450\" y=\"235\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Returns the Parent Element</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 2: What does `.children` return?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns an <strong>`HTMLCollection`</strong> containing all of the element's direct <strong>child elements</strong>. It does not include text nodes or other node types.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 3: What is the difference between `.children` and `.childNodes`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `.children` returns an `HTMLCollection` of only <strong>direct child elements</strong>. `.childNodes` returns a `NodeList` of <strong>all node types</strong> (including text nodes, comment nodes, and element nodes) that are direct children.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Parent Element -->\n                    <rect x=\"250\" y=\"50\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"70\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Parent Element</text>\n                    <!-- Children -->\n                    <rect x=\"150\" y=\"100\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"200\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">Element 1</text>\n                    <rect x=\"250\" y=\"140\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"160\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#2E7D32\">Text Node</text>\n                    <rect x=\"350\" y=\"140\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"2\"/>\n                    <text x=\"400\" y=\"160\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E64A19\">Element 2</text>\n                    <!-- Connecting Lines -->\n                    <line x1=\"300\" y1=\"80\" x2=\"150\" y2=\"100\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"130\" x2=\"250\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"130\" x2=\"300\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"170\" x2=\"350\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <!-- JS Calls -->\n                    <rect x=\"450\" y=\"100\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">.children</text>\n                    <rect x=\"450\" y=\"150\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"170\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">.childNodes</text>\n                    <rect x=\"450\" y=\"190\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">Results</text>\n                    <text x=\"500\" y=\"235\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">Element 1, Element 2</text>\n                    <text x=\"500\" y=\"260\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">Element 1, Text Node, Element 2</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 3: How do you get the next sibling of an element?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You use the `.nextElementSibling` property. If there is no next sibling, it returns `null`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 4: How do you get the previous sibling of an element?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You use the `.previousElementSibling` property. If there is no previous sibling, it returns `null`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 5: What is the difference between `.children` and `.children[0]`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `.children` returns the entire <strong>`HTMLCollection`</strong> of direct child elements. `.children[0]` specifically accesses the <strong>first direct child element</strong> in that collection (if one exists).\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Parent Element -->\n                    <rect x=\"250\" y=\"50\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"70\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Parent Element</text>\n                    <!-- Children -->\n                    <rect x=\"150\" y=\"100\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"200\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">Child 1</text>\n                    <rect x=\"250\" y=\"140\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"160\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#2E7D32\">Child 2</text>\n                    <rect x=\"350\" y=\"140\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"2\"/>\n                    <text x=\"400\" y=\"160\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E64A19\">Child 3</text>\n                    <!-- Connecting Lines -->\n                    <line x1=\"300\" y1=\"80\" x2=\"150\" y2=\"100\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"130\" x2=\"250\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"130\" x2=\"300\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"170\" x2=\"350\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <!-- JS Calls -->\n                    <rect x=\"450\" y=\"100\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">children</text>\n                    <rect x=\"450\" y=\"150\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"170\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">children[0]</text>\n                    <rect x=\"450\" y=\"190\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">Returns collection</text>\n                    <rect x=\"450\" y=\"240\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"260\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">Returns Child 1</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 4: What does `.parentElement` return if the element has no parent (is a top-level element)?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns <strong>`null`</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 5: What is the difference between `.children` and `.children[0]`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `.children` returns the entire <strong>`HTMLCollection`</strong> of direct child elements. `.children[0]` specifically accesses the <strong>first direct child element</strong> in that collection (if it exists).\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 6: How do you get the next sibling of an element?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You use the `.nextElementSibling` property. It returns the next element sibling or `null` if there isn't one.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 7: How do you get the previous sibling of an element?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You use the `.previousElementSibling` property. It returns the previous element sibling or `null` if there isn't one.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 8: What's the difference between `.children` and `.childNodes`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `.children` returns only direct child <strong>elements</strong> (as an `HTMLCollection`), while `.childNodes` returns all direct child <strong>nodes</strong> (including text nodes, comment nodes, etc., as a `NodeList`).\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Parent Element -->\n                    <rect x=\"250\" y=\"50\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"70\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Parent Element</text>\n                    <!-- Children -->\n                    <rect x=\"150\" y=\"100\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"200\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">Element Child</text>\n                    <rect x=\"250\" y=\"140\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"160\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#2E7D32\">Text Node</text>\n                    <rect x=\"350\" y=\"140\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"2\"/>\n                    <text x=\"400\" y=\"160\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E64A19\">Element Child</text>\n                    <!-- Connecting Lines -->\n                    <line x1=\"300\" y1=\"80\" x2=\"150\" y2=\"100\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"130\" x2=\"250\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"130\" x2=\"300\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"170\" x2=\"350\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <!-- JS Calls -->\n                    <rect x=\"450\" y=\"100\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">.children</text>\n                    <rect x=\"450\" y=\"150\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"170\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">.childNodes</text>\n                    <rect x=\"450\" y=\"190\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">Results</text>\n                    <text x=\"500\" y=\"235\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">Element 1, Element 2</text>\n                    <text x=\"500\" y=\"260\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">Element 1, Text Node, Element 2</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 9: What is `.previousElementSibling` useful for?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It's used to find the <strong>immediately preceding sibling element</strong> of the current element in the DOM tree.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 10: Can you get the parent of the `<html>` element? What would it be?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Yes, the parent of the `<html>` element in the DOM tree is the <strong>`document` object</strong>. So, `document.documentElement.parentElement` would return the `document`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 11: If you need to get the first child element of a `div`, what property would you use?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would use `.children[0]`. For example, if `myDiv` is a variable holding the `div` element: `myDiv.children[0]`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 12: How would you get the parent of an element with the ID \"myElement\"?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> First, select the element, then access its parent:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const element = document.getElementById(\"myElement\");\nif (element) {\n  const parent = element.parentElement;\n  // Now you can work with the parent\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 13: What is the difference between `.children` and `.firstElementChild`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `.children` returns an `HTMLCollection` of <strong>all</strong> direct child elements. `.firstElementChild` returns only the <strong>first direct child element</strong> (or `null` if there are no element children).\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 14: Can you traverse to text nodes using these properties?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> No, properties like `.parentElement`, `.children`, `.nextElementSibling`, and `.previousElementSibling` specifically work with <strong>Element nodes</strong>. For text nodes, you would need to use `.childNodes` and check the `nodeType`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 15: How might you find all list items (`<li>`) within a specific `<ul>` element that you've already selected?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> First, select the `<ul>` element (e.g., using `getElementById` or `querySelector`). Then, call `getElementsByTagName` or `querySelector` on that specific `<ul>` element:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const myList = document.getElementById(\"myList\"); // Assuming ul has id=\"myList\"\nif (myList) {\n  const listItems = myList.getElementsByTagName(\"li\");\n  // Or using querySelectorAll:\n  // const listItems = myList.querySelectorAll(\"li\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "display_order": 8,
  "created_at": "2025-06-29 16:06:32",
  "updated_at": "2025-07-01 02:03:20",
  "exercises": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 8: Traversing the DOM (Parent, Child, Siblings)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Practice Navigating the DOM Tree!</h2>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 1: Finding the Parent</h3>\n        <p class=\"text-gray-600 mb-3\">Given the following HTML, write the JavaScript to find the parent of the `<span>` element.</p>\n        <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code><div id=\"container\">\n  <p>Some text</p>\n  <span>This is the target</span>\n</div></code></pre>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <ol class=\"list-decimal list-inside ml-4 mt-2\">\n                    <li>First, select the `<span>`:</li>\n                </ol>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const spanElement = document.querySelector(\"span\");</code></pre>\n                <ol class=\"list-decimal list-inside ml-4 mt-2\">\n                    <li>Then, find its parent:</li>\n                </ol>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (spanElement) {\n  const parentDiv = spanElement.parentElement;\n  console.log(parentDiv.id); // Should log \"container\"\n}</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- DOM Tree -->\n                    <rect x=\"250\" y=\"50\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"70\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Parent: div (id=\"container\")</text>\n                    <line x1=\"300\" y1=\"80\" x2=\"300\" y2=\"120\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <rect x=\"200\" y=\"120\" width=\"200\" height=\"30\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"140\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E65100\">Child: span</text>\n                    <rect x=\"250\" y=\"160\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E64A19\">Text Node</text>\n                    <line x1=\"300\" y1=\"150\" x2=\"300\" y2=\"180\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"150\" x2=\"250\" y2=\"160\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <!-- JS Call -->\n                    <rect x=\"350\" y=\"180\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: span.parentElement</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 2: Finding the First Child Element</h3>\n        <p class=\"text-gray-600 mb-3\">Given a `div` element stored in a variable `myDiv`, how would you get its first child element?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would use the `.children[0]` property:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const firstChild = myDiv.children[0];</code></pre>\n                It's important to check if `myDiv.children.length > 0` first.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 3: Getting All Children</h3>\n        <p class=\"text-gray-600 mb-3\">If you have a `<ul>` element in a variable `myList`, how do you get a collection of all its `<li>` children?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would use the `.children` property:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const listItems = myList.children; // This gives an HTMLCollection of <li> elements</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 4: Finding the Next Sibling</h3>\n        <p class=\"text-gray-600 mb-3\">You have selected an element `myElement`. How do you find the element that immediately follows it in the DOM tree at the same level?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would use the `.nextElementSibling` property:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const nextSibling = myElement.nextElementSibling;</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 5: Finding the Previous Sibling</h3>\n        <p class=\"text-gray-600 mb-3\">If you have selected `myElement`, how do you find the element that immediately precedes it at the same level?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would use the `.previousElementSibling` property:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const previousSibling = myElement.previousElementSibling;</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 6: What's the difference between `.children` and `.childNodes`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `.children` returns only direct child <strong>elements</strong>, while `.childNodes` returns all direct child <strong>nodes</strong> (including text nodes, comment nodes, etc.).\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Parent Element -->\n                    <rect x=\"250\" y=\"50\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"70\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Parent Element</text>\n                    <!-- Children -->\n                    <rect x=\"150\" y=\"100\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"200\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">Element Child 1</text>\n                    <rect x=\"250\" y=\"140\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"160\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#2E7D32\">Text Node</text>\n                    <rect x=\"350\" y=\"140\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"2\"/>\n                    <text x=\"400\" y=\"160\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E64A19\">Element Child 2</text>\n                    <!-- Connecting Lines -->\n                    <line x1=\"300\" y1=\"80\" x2=\"150\" y2=\"100\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"130\" x2=\"250\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"130\" x2=\"300\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <line x1=\"300\" y1=\"170\" x2=\"350\" y2=\"140\" stroke=\"#757575\" stroke-width=\"2\"/>\n                    <!-- JS Calls -->\n                    <rect x=\"450\" y=\"100\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"120\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">children</text>\n                    <rect x=\"450\" y=\"150\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"170\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#1976D2\">childNodes</text>\n                    <!-- Results -->\n                    <rect x=\"450\" y=\"190\" width=\"100\" height=\"40\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">Returns</text>\n                    <text x=\"500\" y=\"235\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">Elements Only</text>\n                    <text x=\"500\" y=\"260\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">All Nodes</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 7: Finding the Parent of the `html` element</h3>\n        <p class=\"text-gray-600 mb-3\">What would `document.documentElement.parentElement` return?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It would return the <strong>`document` object</strong>, as the `<html>` element is the direct child of the `document`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 8: Accessing All Children of a Specific Element</h3>\n        <p class=\"text-gray-600 mb-3\">Given a `div` with the ID \"contentArea\", how would you get all the elements directly inside it?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> First, get the `div`, then access its children:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const contentArea = document.getElementById(\"contentArea\");\nif (contentArea) {\n  const childrenElements = contentArea.children;\n  // Now you can work with the HTMLCollection 'childrenElements'\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 9: What if an element has no siblings?</h3>\n        <p class=\"text-gray-600 mb-3\">If an element is the only child of its parent, what will `.nextElementSibling` and `.previousElementSibling` return?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Both `.nextElementSibling` and `.previousElementSibling` will return <strong>`null`</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 10: Looping through Children</h3>\n        <p class=\"text-gray-600 mb-3\">You've selected a `div` into a variable `mySection`. How would you log the tag name of each direct child element within `mySection`?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Use a `for...of` loop (or a traditional `for` loop) on `mySection.children`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (mySection) {\n  for (const child of mySection.children) {\n    console.log(child.tagName); // Logs the tag name (e.g., \"P\", \"SPAN\")\n  }\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 11: What does `.parentElement` return if the element is the `<html>` tag?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns the <strong>`document` object</strong>, as `document` is the parent of `<html>`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 12: Getting the last child element</h3>\n        <p class=\"text-gray-600 mb-3\">If you have a variable `myList` holding a `<ul>` element, how would you access its last child element?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You can access the last child using the `.children` collection and its `length` property:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (myList && myList.children.length > 0) {\n  const lastChild = myList.children[myList.children.length - 1];\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 13: What's the difference between `.children` and `.children[0]`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `.children` returns the entire <strong>`HTMLCollection`</strong> of direct child elements. `.children[0]` specifically accesses the <strong>first direct child element</strong> in that collection (if it exists).\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 14: Finding an element and then its parent</h3>\n        <p class=\"text-gray-600 mb-3\">Select an element with the ID \"target-item\", and if found, log its parent's tag name to the console.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const target = document.getElementById(\"target-item\");\nif (target && target.parentElement) {\n  console.log(target.parentElement.tagName); // Logs the tag name in uppercase\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 15: Iterating through siblings</h3>\n        <p class=\"text-gray-600 mb-3\">Imagine you have a selected element `myElement` which is a sibling to several others. How could you potentially highlight all its siblings?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You'd need to traverse to the parent, then iterate through its children, skipping the original element itself, or traverse through `.nextElementSibling` and `.previousElementSibling` to collect siblings.\n                Example using parent and children:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (myElement && myElement.parentElement) {\n  const parent = myElement.parentElement;\n  for (const child of parent.children) {\n    if (child !== myElement) {\n      // Highlight the sibling element 'child'\n      child.style.border = \"2px solid yellow\";\n    }\n  }\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "video": null,
  "intros": "<div class=\"tabs-container\">\n    <h2 class=\"text-3xl font-extrabold text-gray-800 mb-6 mt-6 text-center\">Lesson 7: Accessing Elements with getElementsByClassName and getElementsByTagName</h2>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">Discover how to grab groups of similar elements with JavaScript's classic collection methods</p>                   \n\n    <div class=\"tab-content-container p-6 sm:p-8\">\n        <div class=\"tab-content content1\" id=\"content1\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Group Element Selection</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">What if you could collect all similar elements on a page with just one command?</h2>\n            \n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <!-- 16:9 Aspect Ratio SVG -->\n                <div class=\"w-full max-w-4xl mx-auto mb-6\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 800 450\" class=\"w-full h-auto bg-white rounded-lg\">\n                        <!-- Browser Window -->\n                        <rect x=\"50\" y=\"30\" width=\"700\" height=\"390\" fill=\"#F3F4F6\" stroke=\"#D1D5DB\" stroke-width=\"2\" rx=\"4\"/>\n                        \n                        <!-- Browser Header -->\n                        <rect x=\"50\" y=\"30\" width=\"700\" height=\"40\" fill=\"#E5E7EB\" rx=\"4\"/>\n                        <circle cx=\"70\" cy=\"50\" r=\"6\" fill=\"#EF4444\"/>\n                        <circle cx=\"90\" cy=\"50\" r=\"6\" fill=\"#FBBF24\"/>\n                        <circle cx=\"110\" cy=\"50\" r=\"6\" fill=\"#10B981\"/>\n                        \n                        <!-- Page Content -->\n                        <rect x=\"70\" y=\"90\" width=\"660\" height=\"300\" fill=\"#F9FAFB\" stroke=\"#D1D5DB\" rx=\"4\"/>\n                        \n                        <!-- Product Cards -->\n                        <rect x=\"100\" y=\"120\" width=\"180\" height=\"120\" fill=\"#DBEAFE\" rx=\"4\" class=\"product-card\"/>\n                        <text x=\"190\" y=\"150\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#1E40AF\">Product Card</text>\n                        <text x=\"190\" y=\"180\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#4B5563\">class=\"product-card\"</text>\n                        \n                        <rect x=\"310\" y=\"120\" width=\"180\" height=\"120\" fill=\"#DBEAFE\" rx=\"4\" class=\"product-card\"/>\n                        <text x=\"400\" y=\"150\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#1E40AF\">Product Card</text>\n                        <text x=\"400\" y=\"180\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#4B5563\">class=\"product-card\"</text>\n                        \n                        <rect x=\"520\" y=\"120\" width=\"180\" height=\"120\" fill=\"#DBEAFE\" rx=\"4\" class=\"product-card\"/>\n                        <text x=\"610\" y=\"150\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#1E40AF\">Product Card</text>\n                        <text x=\"610\" y=\"180\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#4B5563\">class=\"product-card\"</text>\n                        \n                        <!-- Buttons -->\n                        <rect x=\"150\" y=\"270\" width=\"100\" height=\"40\" fill=\"#FDE68A\" rx=\"4\"/>\n                        <text x=\"200\" y=\"295\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#92400E\">Add to Cart</text>\n                        \n                        <rect x=\"360\" y=\"270\" width=\"100\" height=\"40\" fill=\"#FDE68A\" rx=\"4\"/>\n                        <text x=\"410\" y=\"295\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#92400E\">Add to Cart</text>\n                        \n                        <rect x=\"570\" y=\"270\" width=\"100\" height=\"40\" fill=\"#FDE68A\" rx=\"4\"/>\n                        <text x=\"620\" y=\"295\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#92400E\">Add to Cart</text>\n                        \n                        <!-- JavaScript Console -->\n                        <rect x=\"100\" y=\"320\" width=\"600\" height=\"70\" fill=\"#FEF2F2\" stroke=\"#FECACA\" rx=\"4\"/>\n                        <text x=\"400\" y=\"340\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#DC2626\">JavaScript Code</text>\n                        \n                        <!-- ClassName Example -->\n                        <text x=\"400\" y=\"370\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#1E40AF\">let cards = document.getElementsByClassName('product-card');</text>\n                        \n                        <!-- TagName Example -->\n                        <text x=\"400\" y=\"400\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#1E40AF\">let buttons = document.getElementsByTagName('button');</text>\n                        \n                        <!-- Selection Visuals -->\n                        <path d=\"M 400 360 L 190 120\" stroke=\"#10B981\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 400 360 L 400 120\" stroke=\"#10B981\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 400 360 L 610 120\" stroke=\"#10B981\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        \n                        <path d=\"M 400 390 L 200 270\" stroke=\"#F59E0B\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 400 390 L 410 270\" stroke=\"#F59E0B\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 400 390 L 620 270\" stroke=\"#F59E0B\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        \n                        <!-- Collection Boxes -->\n                        <rect x=\"50\" y=\"400\" width=\"300\" height=\"30\" fill=\"#DBEAFE\" stroke=\"#3B82F6\" stroke-width=\"2\" rx=\"4\"/>\n                        <text x=\"200\" y=\"420\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">HTMLCollection (3 product cards)</text>\n                        \n                        <rect x=\"450\" y=\"400\" width=\"300\" height=\"30\" fill=\"#FDE68A\" stroke=\"#F59E0B\" stroke-width=\"2\" rx=\"4\"/>\n                        <text x=\"600\" y=\"420\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#92400E\">HTMLCollection (3 buttons)</text>\n                    </svg>\n                </div>\n                \n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">\n                    Think of <code class=\"bg-gray-200 px-1 rounded\">getElementsByClassName</code> as a magnet that attracts all elements sharing the same class, and <code class=\"bg-gray-200 px-1 rounded\">getElementsByTagName</code> as a net that catches all elements of the same type. These methods let you work with groups of similar elements at once - perfect for updating all product cards, collecting form inputs, or modifying every paragraph on a page.\n                </p>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed mt-4\">\n                    Unlike single-element selectors, these methods return live collections that automatically update as your page changes. They're like having a dynamic group chat with all elements that match your criteria - send one command and every member gets the message instantly!\n                </p>                \n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">\n                    \"Why select elements one-by-one when you can gather entire teams with a single command?\"\n                </p>\n            </div> \n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "summary": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 8: Traversing the DOM (Parent, Child, Siblings)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Lesson Summary</h2>\n\n    <div class=\"summary-container bg-gray-50 p-6 rounded-lg shadow-md\">\n        <div class=\"flex flex-col lg:flex-row items-center lg:items-start gap-8 mb-8\">\n            <div class=\"lg:w-1/2\">\n                <h3 class=\"text-2xl font-bold text-gray-800 mb-4\">Navigating the DOM Tree</h3>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    The DOM tree structure allows for easy navigation between related elements using specific JavaScript properties. Once you have a reference to an element, you can explore its connections within the tree.\n                </p>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    Understanding these relationships is crucial for manipulating the DOM dynamically. Whether you need to go up to a parent, find children, or move between siblings, JavaScript provides direct ways to do so.\n                </p>\n                <h4 class=\"text-xl font-semibold text-gray-700 mb-3\">Key Relationships & Properties:</h4>\n                <ul class=\"list-disc list-inside text-gray-600 ml-4\">\n                    <li><strong>Parent:</strong> The element directly containing another. Accessed via `.parentElement`.</li>\n                    <li><strong>Children:</strong> All direct elements inside an element. Accessed via `.children` (returns `HTMLCollection`).</li>\n                    <li><strong>Siblings:</strong> Elements sharing the same parent. Accessed via `.nextElementSibling` (next) and `.previousElementSibling` (previous).</li>\n                </ul>\n            </div>\n            <div class=\"lg:w-1/2 flex justify-center\">\n                <!-- SVG Illustration: DOM Traversal -->\n                <svg class=\"h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"10\" fill=\"#F8F9FA\"/>\n                    <!-- DOM Tree -->\n                    <rect x=\"960\" y=\"50\" width=\"120\" height=\"40\" rx=\"5\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1020\" y=\"80\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#1976D2\">Document</text>\n                    <rect x=\"850\" y=\"150\" width=\"220\" height=\"40\" rx=\"5\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"960\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">html</text>\n                    <rect x=\"750\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/>\n                    <text x=\"825\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">head</text>\n                    <rect x=\"1050\" y=\"250\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-1=\"1\"/>\n                    <text x=\"1125\" y=\"280\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#424242\">body</text>\n                    <rect x=\"1050\" y=\"350\" width=\"150\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                    <text x=\"1125\" y=\"380\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#2E7D32\">p (Current Element)</text>\n                    <!-- Navigation Arrows -->\n                    <path d=\"M1125 390 L 1125 450\" stroke=\"#FF7043\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Parent -->\n                    <polygon points=\"1125 450 1110 460 1110 440\" fill=\"#FF7043\"/>\n                    <path d=\"M1125 390 L 1050 450\" stroke=\"#4FC3F7\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Sibling -->\n                    <polygon points=\"1050 450 1035 460 1035 440\" fill=\"#4FC3F7\"/>\n                    <path d=\"M1125 390 L 1125 550\" stroke=\"#90CAF9\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/> <!-- To Child -->\n                    <polygon points=\"1125 550 1110 560 1110 540\" fill=\"#90CAF9\"/>\n                    <text x=\"900\" y=\"465\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#FF7043\">Go to Parent: `.parentElement`</text>\n                    <text x=\"900\" y=\"430\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#4FC3F7\">Go to Sibling: `.nextElementSibling`</text>\n                    <text x=\"1150\" y=\"565\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#90CAF9\">Go to Children: `.children`</text>\n                </svg>\n            </div>\n        </div>\n\n        <div class=\"bg-sky-50 border-l-4 border-sky-500 text-sky-700 p-4 rounded-r-lg mb-6\" role=\"alert\">\n            <p class=\"font-bold\">Key to Navigation:</p>\n            <p>These traversal properties (`parentElement`, `children`, `nextElementSibling`, `previousElementSibling`) are essential tools for moving around the DOM tree, allowing your JavaScript to understand and interact with related elements.</p>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->"
}