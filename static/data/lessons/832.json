{
  "id": 832,
  "unit_id": 83,
  "title": "Lesson 5: Accessing Elements with getElementById",
  "slug": "lesson_5_accessing_elements_with_getelementbyid",
  "content": "<div class=\"pt-6\">\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 5: Accessing Elements with getElementById</h1>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">\n        You know the DOM is structured, and you know you can access it via `document`. Now, let's learn the most direct way to grab a specific element!\n    </p>\n\n    <!-- Illustration: A direct search using an ID -->\n    <div class=\"flex justify-center mb-8\">\n        <svg class=\"h-64 w-full max-w-2xl\" viewBox=\"0 0 1920 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"1920\" height=\"500\" rx=\"10\" fill=\"#F0F4F8\"/>\n            <!-- Document Object -->\n            <rect x=\"100\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n            <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#E65100\">Document Object</text>\n            <text x=\"500\" y=\"180\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">(Contains the DOM Tree)</text>\n            <!-- DOM Tree Elements -->\n            <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#E0E0E0\" stroke=\"#BDBDBD\" stroke-width=\"1\"/> <!-- Element without ID -->\n            <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">A Paragraph</text>\n            <rect x=\"150\" y=\"300\" width=\"200\" height=\"50\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/> <!-- Target Element with ID -->\n            <text x=\"250\" y=\"330\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">My Special Heading (ID: \"main-title\")</text>\n            <!-- JavaScript Search -->\n            <rect x=\"1000\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n            <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#1976D2\">JavaScript Search</text>\n            <rect x=\"1100\" y=\"200\" width=\"700\" height=\"80\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">document.getElementById('main-title')</text>\n            <!-- Connection -->\n            <path d=\"M800 275 Q 900 275 1100 200\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n            <polygon points=\"1100 200 1085 210 1085 190\" fill=\"#7CB342\"/>\n            <text x=\"950\" y=\"240\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#33691E\">Directly Targets</text>\n            <text x=\"950\" y=\"265\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#33691E\">The Special Heading</text>\n        </svg>\n    </div>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-4\">The Power of a Unique ID</h2>\n    <p class=\"text-gray-600 mb-6\">\n        HTML allows you to give each element a unique `id` attribute. Think of this `id` as a specific name or label that belongs to only one element on the entire page. This uniqueness is incredibly powerful!\n    </p>\n    <p class=\"text-gray-600 mb-6\">\n        JavaScript provides a method called `document.getElementById()`. This method lets you search the entire DOM tree for an element that has a specific `id` you provide. If it finds one, it returns that element; otherwise, it returns `null`.\n    </p>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-4\">How it Works: A Simple Example</h2>\n    <p class=\"text-gray-600 mb-6\">\n        Let's say you have this HTML:\n    </p>\n    <pre class=\"bg-gray-100 p-4 rounded-lg mb-6 text-sm font-mono overflow-x-auto\">\n<code><h1 id=\"page-title\">Welcome to My Site!</h1>\n<p>This is a paragraph.</p></code>\n    </pre>\n    <p class=\"text-gray-600 mb-6\">\n        In your JavaScript, you can grab that specific heading like this:\n    </p>\n    <pre class=\"bg-gray-100 p-4 rounded-lg mb-6 text-sm font-mono overflow-x-auto\">\n<code>// Get the element with the ID \"page-title\"\nconst titleElement = document.getElementById(\"page-title\");\n\n// Now you can do things with titleElement, like change its text\n// titleElement.textContent = \"Hello from JavaScript!\";</code>\n    </pre>\n    <p class=\"text-gray-600 mb-6\">\n        The `document.getElementById()` method is your direct ticket to a specific element, making it a fundamental tool for manipulating your web page.\n    </p>\n\n    <h4 class=\"text-xl font-semibold text-gray-700 mt-8 mb-4\">Key Takeaway:</h4>\n    <p class=\"text-gray-700 font-semibold italic\">`document.getElementById()` finds a single element by its unique ID, providing direct access for manipulation.</p>\n\n</div>\n<!--end-of-code-block-->",
  "questions": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 5: Accessing Elements with getElementById</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Let's See How Well You Know `getElementById`!</h2>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 1: What is the primary purpose of `document.getElementById()`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Its primary purpose is to find and return a specific HTML element from the DOM by its unique `id` attribute.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 2: What must be true about the `id` attribute for `getElementById` to work effectively?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> The `id` attribute must be <strong>unique</strong> within the HTML document for that specific element. `getElementById` expects a unique identifier.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Correct usage -->\n                    <rect x=\"50\" y=\"50\" width=\"250\" height=\"100\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"175\" y=\"85\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#1976D2\">HTML:</text>\n                    <text x=\"175\" y=\"115\" font-family=\"monospace\" font-size=\"14\" fill=\"#0D47A1\"><p id=\"unique-para\">...</p></text>\n                    <text x=\"175\" y=\"145\" font-family=\"monospace\" font-size=\"14\" fill=\"#1976D2\">JS: document.getElementById('unique-para')</text>\n                    <!-- Incorrect usage -->\n                    <rect x=\"350\" y=\"50\" width=\"200\" height=\"100\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"85\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">HTML:</text>\n                    <text x=\"450\" y=\"115\" font-family=\"monospace\" font-size=\"14\" fill=\"#E65100\"><p id=\"same-id\">...</p></text>\n                    <text x=\"450\" y=\"145\" font-family=\"monospace\" font-size=\"14\" fill=\"#E65100\"><div id=\"same-id\">...</div></text>\n                    <text x=\"450\" y=\"175\" font-family=\"monospace\" font-size=\"14\" fill=\"#E65100\">JS: document.getElementById('same-id') (May cause issues)</text>\n                    <text x=\"450\" y=\"40\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E65100\">Multiple elements with same ID</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 3: What does `document.getElementById()` return if no element with the specified ID is found?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns <strong>`null`</strong> if no element matches the provided ID.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 4: What data type is passed as an argument to `getElementById()`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> A <strong>string</strong> representing the ID of the element you want to find is passed as the argument.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 5: How would you write the JavaScript code to get an element with the ID \"my-button\"?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> The code would be:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.getElementById(\"my-button\");</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Code Snippet -->\n                    <rect x=\"50\" y=\"50\" width=\"500\" height=\"150\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"85\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">document.getElementById(\"my-button\");</text>\n                    <text x=\"300\" y=\"120\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">This selects the element with</text>\n                    <text x=\"300\" y=\"145\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">the unique ID \"my-button\".</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 6: What happens if you use `getElementById` with an ID that doesn't exist in the HTML?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> If the ID doesn't exist, `getElementById` will return <strong>`null`</strong>. Trying to access properties or methods on `null` will cause an error.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 7: Is `getElementById` case-sensitive?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Yes, `getElementById` is typically <strong>case-sensitive</strong>. The ID you provide in JavaScript must match the case of the `id` attribute in your HTML exactly.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 8: What does `document.getElementById()` return when it successfully finds an element?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns an <strong>Element object</strong> that represents the found HTML element. You can then use this object to access its properties, change its content, style, etc.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- HTML Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"50\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">HTML: <p id=\"myPara\">...</p></text>\n                    <!-- JavaScript Search -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"120\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"140\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: document.getElementById('myPara')</text>\n                    <text x=\"450\" y=\"170\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Returns:</text>\n                    <!-- Element Object -->\n                    <rect x=\"400\" y=\"180\" width=\"100\" height=\"30\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"200\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#2E7D32\">p Element Object</text>\n                    <!-- Connection -->\n                    <path d=\"M300 150 Q 350 150 400 180\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 180 385 190 385 170\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 9: What's the best practice for `id` attributes?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> The best practice is to ensure that each `id` attribute is <strong>unique</strong> within the entire HTML document. This guarantees that `getElementById` will find the exact element you're looking for.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 10: What happens if you try to use `getElementById` on an element that does not have an `id` attribute?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> If the element has no `id` attribute, or if the provided `id` string doesn't match any existing `id`, `getElementById` will return <strong>`null`</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 11: Can `getElementById` find elements by their tag name (like `<p>`) or class name (like `.my-class`)?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> No, `getElementById` is specifically designed to find elements by their <strong>`id` attribute only</strong>. Other methods are used for finding elements by tag name or class name.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 12: What is the relationship between the `document` object and `getElementById`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `getElementById` is a <strong>method of the `document` object</strong>. You call `getElementById` on the `document` object to perform the search.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 13: How can you safely use the result of `getElementById`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It's good practice to check if the result is not `null` before trying to use it. This prevents errors if the element wasn't found.\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const element = document.getElementById(\"myId\");\nif (element) {\n  // It's safe to use the element here\n  element.textContent = \"Found!\";\n} else {\n  console.log(\"Element with ID 'myId' not found.\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "display_order": 5,
  "created_at": "2025-06-29 16:06:32",
  "updated_at": "2025-06-30 16:40:54",
  "exercises": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 5: Accessing Elements with getElementById</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Let's Practice Using `getElementById`!</h2>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 1: Simple ID Selection</h3>\n        <p class=\"text-gray-600 mb-3\">Given the following HTML, write the JavaScript code to select the paragraph with the ID \"intro-paragraph\".</p>\n        <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code><p id=\"intro-paragraph\">This is the introduction.</p></code></pre>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.getElementById(\"intro-paragraph\");</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- HTML Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"50\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">HTML: <p id=\"intro-paragraph\">...</text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: document.getElementById(\"intro-paragraph\")</text>\n                    <!-- Connection -->\n                    <path d=\"M300 150 Q 350 150 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 2: Handling Non-existent IDs</h3>\n        <p class=\"text-gray-600 mb-3\">What would be the result of `document.getElementById(\"non-existent-id\")` if no element with that ID exists on the page?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It would return <strong>`null`</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 3: Case Sensitivity Check</h3>\n        <p class=\"text-gray-600 mb-3\">If you have an HTML element `<div id=\"MyDiv\">`, will `document.getElementById(\"mydiv\")` find it? Explain why or why not.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> No, it likely will not find it. `getElementById` is typically <strong>case-sensitive</strong>. The ID \"mydiv\" does not match \"MyDiv\".\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 4: Practical Application - Changing Text</h3>\n        <p class=\"text-gray-600 mb-3\">Write the HTML and JavaScript to create a paragraph with the ID \"message\" and then change its text content to \"Updated!\" using JavaScript.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                HTML:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code><p id=\"message\">Initial text</p></code></pre>\n                JavaScript:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const messagePara = document.getElementById(\"message\");\nif (messagePara) {\n  messagePara.textContent = \"Updated!\";\n}</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- HTML Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"50\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">HTML: <p id=\"message\">Initial text</p></text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: const msg = document.getElementById(\"message\");</text>\n                    <text x=\"450\" y=\"155\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">if(msg) msg.textContent = \"Updated!\";</text>\n                    <!-- Connection -->\n                    <path d=\"M300 150 Q 350 150 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 5: What does `getElementById` return if the ID is unique?</h3>\n        <p class=\"text-gray-600 mb-3\">When `document.getElementById(\"someUniqueId\")` successfully finds an element, what type of value does it return?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns an <strong>Element object</strong> representing the found HTML element.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 6: Storing the Element</h3>\n        <p class=\"text-gray-600 mb-3\">After using `document.getElementById()`, how do you typically store the found element so you can use it later in your code?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You store it in a <strong>variable</strong> using `const` or `let`.\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const myElement = document.getElementById(\"someId\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 7: Importance of Unique IDs</h3>\n        <p class=\"text-gray-600 mb-3\">Why is it crucial for `id` attributes in HTML to be unique when using `document.getElementById()`?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `getElementById` is designed to return only a <strong>single element</strong>. If IDs are not unique, the behavior of `getElementById` can be unpredictable, often returning only the first match it finds, which might not be the one you intended.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 8: Accessing a Specific `div`</h3>\n        <p class=\"text-gray-600 mb-3\">Write the HTML and JavaScript to select a `div` with the ID \"container\".</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                HTML:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code><div id=\"container\">Content inside div</div></code></pre>\n                JavaScript:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const myDiv = document.getElementById(\"container\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 9: What if the ID is in a different case?</h3>\n        <p class=\"text-gray-600 mb-3\">You have `<h2 id=\"PageHeader\">Title</h2>`. If you write `document.getElementById(\"pageheader\")`, will it work? Why?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> No, it will likely return `null` because `getElementById` is case-sensitive, and \"pageheader\" does not match \"PageHeader\".\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 10: Targeting an Image</h3>\n        <p class=\"text-gray-600 mb-3\">Write the HTML and JavaScript to select an image element with the ID \"logo-image\".</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                HTML:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code><img id=\"logo-image\" src=\"logo.png\" alt=\"My Logo\"></code></pre>\n                JavaScript:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const logo = document.getElementById(\"logo-image\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 11: Why is `getElementById` fast?</h3>\n        <p class=\"text-gray-600 mb-3\">Since `id` attributes are unique, how does this uniqueness benefit the `getElementById` method?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Because IDs are unique, `getElementById` can usually perform a very fast lookup (often near constant time, O(1)) without having to search through the entire DOM tree. It knows exactly what it's looking for.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 12: Finding an Element and Checking for Existence</h3>\n        <p class=\"text-gray-600 mb-3\">Write JavaScript to get an element with the ID \"user-profile\" and, if it exists, log \"Profile found!\" to the console.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const profile = document.getElementById(\"user-profile\");\nif (profile) {\n  console.log(\"Profile found!\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 13: What if the ID contains special characters?</h3>\n        <p class=\"text-gray-600 mb-3\">HTML `id` attribute naming rules are similar to JavaScript variable names but have some nuances. Generally, IDs should start with a letter and can contain letters, numbers, hyphens, and underscores. What would happen if your ID was `my-element_123`?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> An ID like `my-element_123` is generally valid in HTML. `document.getElementById(\"my-element_123\")` should work correctly because hyphens and underscores are allowed in valid IDs. However, IDs starting with numbers or containing spaces are invalid.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 14: Selecting the `body` element</h3>\n        <p class=\"text-gray-600 mb-3\">Although `document.getElementById` is for IDs, is there a simpler way to directly access the `<body>` element if needed, or would you have to rely on a specific ID?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> While you could give `<body>` an ID and use `getElementById`, there's a more direct way: you can access it via the `document` object itself as `document.body`. However, understanding `getElementById` is crucial for other elements.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 15: Using the Found Element</h3>\n        <p class=\"text-gray-600 mb-3\">You've selected an element using `document.getElementById(\"myButton\")`. What's one thing you could do with the resulting variable, assuming the element was found?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You could change its text content, style, add an event listener, change an attribute, etc. For example:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const button = document.getElementById(\"myButton\");\nif (button) {\n  button.textContent = \"Clicked!\"; // Example: changing text\n  // button.style.backgroundColor = \"lightblue\"; // Example: changing style\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "video": null,
  "intros": "<div class=\"tabs-container\">\n    <h2 class=\"text-3xl font-extrabold text-gray-800 mb-6 mt-6 text-center\">Lesson 5: Accessing Elements with getElementById</h2>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">Discover how to pinpoint and control specific elements on your webpage using their unique IDs</p>\n\n    <div class=\"tab-content-container p-6 sm:p-8\">\n        <div class=\"tab-content content1\" id=\"content1\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">The Power of ID</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">What if you could call any element on a webpage by its name and it instantly responds?</h2>\n            \n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <div class=\"w-full max-w-4xl mx-auto\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 810\" class=\"w-full mb-6\">\n                        <rect width=\"1440\" height=\"810\" fill=\"white\"/>\n                        \n                        <!-- Browser Window -->\n                        <rect x=\"120\" y=\"80\" width=\"1200\" height=\"550\" rx=\"15\" fill=\"#F3F4F6\" stroke=\"#D1D5DB\" stroke-width=\"2\"/>\n                        <circle cx=\"165\" cy=\"115\" r=\"10\" fill=\"#EF4444\"/>\n                        <circle cx=\"195\" cy=\"115\" r=\"10\" fill=\"#F59E0B\"/>\n                        <circle cx=\"225\" cy=\"115\" r=\"10\" fill=\"#10B981\"/>\n                        \n                        <!-- Webpage Content -->\n                        <rect x=\"180\" y=\"170\" width=\"300\" height=\"70\" rx=\"8\" fill=\"#4F46E5\"/>\n                        <text x=\"330\" y=\"210\" font-family=\"Arial\" font-size=\"36\" fill=\"white\" text-anchor=\"middle\">Welcome</text>\n                        \n                        <rect x=\"180\" y=\"260\" width=\"150\" height=\"40\" rx=\"6\" fill=\"#60A5FA\" id=\"svgButton\"/>\n                        <text x=\"255\" y=\"285\" font-family=\"Arial\" font-size=\"20\" fill=\"white\" text-anchor=\"middle\">Button</text>\n                        \n                        <rect x=\"180\" y=\"330\" width=\"200\" height=\"40\" rx=\"6\" fill=\"#34D399\"/>\n                        <text x=\"280\" y=\"355\" font-family=\"Arial\" font-size=\"20\" fill=\"white\" text-anchor=\"middle\">Submit</text>\n                        \n                        <!-- ID Highlight -->\n                        <rect x=\"170\" y=\"245\" width=\"170\" height=\"70\" rx=\"8\" fill=\"none\" stroke=\"#F59E0B\" stroke-width=\"4\" stroke-dasharray=\"8 6\"/>\n                        <text x=\"250\" y=\"235\" font-family=\"Arial\" font-size=\"24\" fill=\"#F59E0B\" text-anchor=\"middle\">ID: \"svgButton\"</text>\n                        \n                        <!-- JavaScript Code -->\n                        <rect x=\"750\" y=\"200\" width=\"500\" height=\"150\" rx=\"15\" fill=\"#1E293B\"/>\n                        <text x=\"780\" y=\"250\" font-family=\"monospace\" font-size=\"36\" fill=\"#60A5FA\">\n                            <tspan x=\"780\" dy=\"40\">let button =</tspan>\n                            <tspan x=\"780\" dy=\"50\"> document.getElementById(</tspan>\n                            <tspan fill=\"#FBBF24\" x=\"1060\" dy=\"0\">\"svgButton\"</tspan>\n                            <tspan fill=\"#60A5FA\" x=\"1260\" dy=\"0\">);</tspan>\n                        </text>\n                        \n                        <!-- Connecting Arrow -->\n                        <path d=\"M530 285 Q700 285 700 250 Q700 210 730 210 L760 210\" stroke=\"#4F46E5\" stroke-width=\"8\" fill=\"none\" marker-end=\"url(#arrowhead)\"/>\n                        <defs>\n                            <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"10\" refX=\"9\" refY=\"3\" orient=\"auto\">\n                                <polygon points=\"0 0, 10 3, 0 6\" fill=\"#4F46E5\"/>\n                            </marker>\n                        </defs>\n                        \n                        <!-- Callout -->\n                        <text x=\"1000\" y=\"420\" font-family=\"Arial\" font-size=\"36\" fill=\"#1E293B\" text-anchor=\"middle\">Grabs EXACT element</text>\n                        <text x=\"1000\" y=\"470\" font-family=\"Arial\" font-size=\"36\" fill=\"#1E293B\" text-anchor=\"middle\">by its unique ID!</text>\n                    </svg>\n                </div>\n                \n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">\n                    Imagine every element on a webpage has its own unique ID badge. <span class=\"font-semibold text-indigo-600\">getElementById</span> is like calling someone's name in a crowd - only the exact person (element) you're looking for will respond! This method instantly finds the ONE element with the matching ID you specify. Unlike other methods that return lists, this gives you direct access to your target element.\n                </p>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed mt-4\">\n                    Think of it as the most precise tool in your JavaScript toolbox. When you need to modify a specific button, update a particular heading, or control one unique element, <span class=\"font-semibold text-indigo-600\">getElementById</span> is your fastest and most direct solution. Every ID must be completely unique on a page - that's what makes this method so powerful and reliable!\n                </p>\n                \n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">\n                    \"With getElementById, accessing elements is as easy as calling them by name!\"\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "summary": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 5: Accessing Elements with getElementById</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Lesson Summary</h2>\n\n    <div class=\"summary-container bg-gray-50 p-6 rounded-lg shadow-md\">\n        <div class=\"flex flex-col lg:flex-row items-center lg:items-start gap-8 mb-8\">\n            <div class=\"lg:w-1/2\">\n                <h3 class=\"text-2xl font-bold text-gray-800 mb-4\">Direct Access with Unique IDs</h3>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    HTML allows you to give elements a unique identifier using the `id` attribute. This `id` is like a specific name tag for that element.\n                </p>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    JavaScript provides the `document.getElementById()` method to directly find and select an element using its unique ID. This is the most precise way to target a single element.\n                </p>\n                <h4 class=\"text-xl font-semibold text-gray-700 mb-3\">Key Points for `getElementById`:</h4>\n                <ul class=\"list-disc list-inside text-gray-600 ml-4\">\n                    <li>Requires a unique `id` attribute on the HTML element.</li>\n                    <li>Syntax: `document.getElementById('yourId')`.</li>\n                    <li>Returns the Element object if found.</li>\n                    <li>Returns `null` if no element with that ID exists.</li>\n                    <li>Is case-sensitive.</li>\n                    <li>Fast lookup due to ID uniqueness.</li>\n                </ul>\n            </div>\n            <div class=\"lg:w-1/2 flex justify-center\">\n                <!-- SVG Illustration: getElementById -->\n                <svg class=\"h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"10\" fill=\"#F8F9FA\"/>\n                    <!-- Document Object -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Document Object</text>\n                    <!-- Target Element -->\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">HTML: <p id=\"special-para\">...</text>\n                    <!-- JavaScript Call -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JavaScript Action</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"80\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">document.getElementById(\"special-para\")</text>\n                    <!-- Result -->\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"80\" rx=\"5\" fill=\"#A5D6A7\" stroke=\"#66BB6A\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"330\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#388E3C\">Returns the Element Object</text>\n                    <!-- Connection -->\n                    <path d=\"M800 300 Q 900 300 1100 300\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 300 1085 310 1085 290\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"305\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Direct Access</text>\n                </svg>\n            </div>\n        </div>\n\n        <div class=\"bg-sky-50 border-l-4 border-sky-500 text-sky-700 p-4 rounded-r-lg mb-6\" role=\"alert\">\n            <p class=\"font-bold\">Remember:</p>\n            <p>Use `getElementById` when you know the exact, unique `id` of the element you need. It's your most direct way to grab a single element from the DOM.</p>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->"
}