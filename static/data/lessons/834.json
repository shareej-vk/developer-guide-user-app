{
  "id": 834,
  "unit_id": 83,
  "title": "Lesson 7: Accessing Elements with getElementsByClassName and getElementsByTagName",
  "slug": "lesson_7_accessing_elements_with_getelementsbyclassname_and_getelementsbytagname",
  "content": "<div class=\"pt-6\">\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 7: Accessing Elements with getElementsByClassName and getElementsByTagName</h1>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">\n        You've mastered selecting unique IDs and using CSS selectors. Now, let's learn how to efficiently grab multiple elements based on their shared characteristics like class names or their HTML tag types!\n    </p>\n\n    <!-- Illustration: Selecting groups -->\n    <div class=\"flex justify-center mb-8\">\n        <svg class=\"h-64 w-full max-w-2xl\" viewBox=\"0 0 1920 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"1920\" height=\"500\" rx=\"10\" fill=\"#F0F4F8\"/>\n            <!-- HTML Elements -->\n            <rect x=\"100\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n            <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#E65100\">Page Elements</text>\n            <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-width=\"1\"/> <!-- Item 1 -->\n            <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Paragraph (`p` tag)</text>\n            <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-width=\"1\"/> <!-- Item 2 -->\n            <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Highlighted Item (`span` with class=\"highlight\")</text>\n            <rect x=\"150\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/> <!-- Item 3 -->\n            <text x=\"500\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Another Paragraph (`p` tag)</text>\n            <!-- JavaScript Selection Tools -->\n            <rect x=\"1000\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n            <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#1976D2\">JavaScript Selection Tools</text>\n            <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Get by Class: `getElementsByClassName(\"highlight\")`</text>\n            <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Get by Tag: `getElementsByTagName(\"p\")`</text>\n            <!-- Connection -->\n            <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n            <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n            <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Targeting Multiple Elements</text>\n        </svg>\n    </div>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-4\">Selecting by Class Name: `getElementsByClassName`</h2>\n    <p class=\"text-gray-600 mb-6\">\n        Often, you'll want to apply styles or actions to multiple elements that share a common characteristic defined by their class. The `document.getElementsByClassName()` method is perfect for this! You pass the class name as a string, and it returns an `HTMLCollection` of all elements that have that specific class.\n    </p>\n    <p class=\"text-gray-600 mb-6\">\n        For example, if you have several elements with `class=\"important-message\"`, you can grab them all with `document.getElementsByClassName(\"important-message\")`.\n    </p>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-4\">Selecting by Tag Name: `getElementsByTagName`</h2>\n    <p class=\"text-gray-600 mb-6\">\n        Sometimes, you need to work with all elements of a certain type, regardless of their class or ID. `document.getElementsByTagName()` does just that. You provide the HTML tag name (like `\"p\"`, `\"div\"`, `\"img\"`, `\"a\"`) as a string, and it returns an `HTMLCollection` of all elements with that tag name.\n    </p>\n    <p class=\"text-gray-600 mb-6\">\n        For instance, `document.getElementsByTagName(\"p\")` will give you all the paragraph elements on the page.\n    </p>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-4\">Working with the Collections</h2>\n    <p class=\"text-gray-600 mb-6\">\n        Both `getElementsByClassName` and `getElementsByTagName` return an `HTMLCollection`. While it's not a true JavaScript array, it's array-like. This means you can access individual elements by their index (e.g., `collection[0]`) and often iterate over them using a `for` loop. This is incredibly useful for applying changes to multiple elements at once.\n    </p>\n\n    <h4 class=\"text-xl font-semibold text-gray-700 mt-8 mb-4\">Key Takeaways:</h4>\n    <p class=\"text-gray-700 font-semibold italic\">Use `getElementsByClassName` for groups sharing a class, and `getElementsByTagName` for groups sharing an HTML tag. Both return collections of elements.</p>\n\n</div>\n<!--end-of-code-block-->",
  "questions": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 7: Accessing Elements with getElementsByClassName and getElementsByTagName</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Test Your Knowledge of Group Selection!</h2>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 1: What does `getElementsByClassName()` return?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns an <strong>`HTMLCollection`</strong> of all elements that have the specified class name.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 2: What does `getElementsByTagName()` return?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns an <strong>`HTMLCollection`</strong> of all elements that have the specified tag name.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 3: Can `getElementsByClassName()` accept multiple class names?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Yes, you can pass a string of class names separated by spaces (e.g., `\"class1 class2\"`), and it will find elements that have *both* classes.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- HTML with multiple classes -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"80\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <div class=\"item active\">...</text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: document.getElementsByClassName(\"item active\");</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                    <text x=\"350\" y=\"145\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#33691E\">Finds elements with BOTH classes</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 4: What is an `HTMLCollection`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> An `HTMLCollection` is a collection (an array-like object) of HTML elements returned by methods like `getElementsByClassName` and `getElementsByTagName`. It's \"live,\" meaning it updates automatically if the DOM changes.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 5: Can `getElementsByTagName` select elements with a specific class?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> No, `getElementsByTagName` only selects elements based on their <strong>tag name</strong> (like \"p\", \"div\", \"img\"). It doesn't filter by class or ID.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 6: How would you get all paragraph elements?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `document.getElementsByTagName()`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.getElementsByTagName(\"p\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 7: What happens if `getElementsByClassName` finds no elements?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns an <strong>empty `HTMLCollection`</strong> (one with a `length` of 0), not `null`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 8: How do you access the first element in an `HTMLCollection`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You use zero-based indexing, just like with arrays. For example, `elements[0]`. You should always check if the collection has elements first (e.g., `if (elements.length > 0)`).\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- HTML Collection -->\n                    <rect x=\"50\" y=\"50\" width=\"500\" height=\"150\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"300\" y=\"85\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">HTMLCollection:</text>\n                    <text x=\"300\" y=\"115\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">[Element A, Element B,</text>\n                    <text x=\"300\" y=\"140\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#E65100\">Element C]</text>\n                    <!-- Accessing -->\n                    <rect x=\"350\" y=\"180\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"210\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">collection[0] // Accesses Element A</text>\n                    <text x=\"450\" y=\"235\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">collection[1] // Accesses Element B</text>\n                    <text x=\"450\" y=\"260\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">collection.length // Gives count (3)</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 9: Can `getElementsByClassName` accept multiple class names like CSS?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Yes, you can pass a string of class names separated by spaces (e.g., `\"class1 class2\"`), and it will find elements that have *all* specified classes.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 10: What is the difference between the `HTMLCollection` returned by `getElementsByClassName` and the `NodeList` returned by `querySelectorAll`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <ol class=\"list-decimal list-inside ml-4 mt-2\">\n                    <li><strong>`HTMLCollection` (from `getElementsByClassName`, `getElementsByTagName`):</strong> Typically \"live,\" meaning it automatically updates if the DOM changes. It doesn't always have all modern array methods like `forEach` directly, though you can often use a `for` loop.</li>\n                    <li><strong>`NodeList` (from `querySelectorAll`):</strong> Usually \"static,\" meaning it's a snapshot and doesn't update automatically. Modern `NodeList`s often have `forEach` directly available.</li>\n                </ol>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 11: How would you get all paragraph elements?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `document.getElementsByTagName()`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.getElementsByTagName(\"p\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 12: How would you get all elements with the class \"item-card\"?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `document.getElementsByClassName()`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.getElementsByClassName(\"item-card\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 13: Which method is generally more flexible: `getElementById`, `getElementsByClassName`, `getElementsByTagName`, or `querySelector`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `querySelector` and `querySelectorAll` are generally more flexible because they can use the full power of CSS selectors, including combinations, relationships, and attributes, not just IDs, classes, or tags.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 14: Can you use `getElementsByClassName` to select elements by ID?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> No, `getElementsByClassName` is specifically for class names. To select by ID, you must use `getElementById` or `querySelector('#yourId')`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 15: How would you get all `<a>` elements on the page?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `document.getElementsByTagName()`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.getElementsByTagName(\"a\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "display_order": 7,
  "created_at": "2025-06-29 16:06:32",
  "updated_at": "2025-07-01 01:56:04",
  "exercises": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 7: Accessing Elements with getElementsByClassName and getElementsByTagName</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Time to Practice Selecting Groups of Elements!</h2>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 1: Select All Elements with a Specific Class</h3>\n        <p class=\"text-gray-600 mb-3\">Given the HTML below, write the JavaScript code to select all elements with the class \"product-item\".</p>\n        <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code><div class=\"product-item\">Product 1</div>\n<p class=\"product-item\">Product 2</p>\n<span class=\"other-class\">Something else</span>\n<div class=\"product-item\">Product 3</div></code></pre>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.getElementsByClassName(\"product-item\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 2: Select All Paragraphs</h3>\n        <p class=\"text-gray-600 mb-3\">Write the JavaScript code to select all `<p>` elements on the page.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.getElementsByTagName(\"p\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 3: Selecting Multiple Classes</h3>\n        <p class=\"text-gray-600 mb-3\">How would you select all elements that have *both* the class \"active\" AND the class \"nav-item\"?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `getElementsByClassName` with a space-separated string:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.getElementsByClassName(\"active nav-item\");</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- HTML Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"50\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <div class=\"item active\">...</text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: document.getElementsByClassName(\"item active\");</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                    <text x=\"350\" y=\"145\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#33691E\">Finds elements with BOTH classes</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 4: What does `getElementsByTagName` return if no matches are found?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns an empty <strong>`HTMLCollection`</strong> (one with a `length` of 0), not `null`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 5: What does `getElementsByClassName` return if no matches are found?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns an empty <strong>`HTMLCollection`</strong> (one with a `length` of 0), not `null`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 6: Looping through an HTMLCollection</h3>\n        <p class=\"text-gray-600 mb-3\">You got an `HTMLCollection` of all `<li>` elements using `document.getElementsByTagName(\"li\")`. How would you log the text content of each `<li>` to the console?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You need to use a traditional `for` loop since `HTMLCollection` doesn't always have `forEach`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const listItems = document.getElementsByTagName(\"li\");\nfor (let i = 0; i < listItems.length; i++) {\n  console.log(listItems[i].textContent);\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 7: Case Sensitivity of Class Names</h3>\n        <p class=\"text-gray-600 mb-3\">If you have an element `<div class=\"MyClass\">`, will `document.getElementsByClassName(\"myclass\")` find it? Explain.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Generally, class names are <strong>case-sensitive</strong> in JavaScript selection methods. So, `document.getElementsByClassName(\"myclass\")` would likely not find an element with `class=\"MyClass\"`. You must match the case exactly.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- HTML Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"50\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <div class=\"MyClass\">...</text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: document.getElementsByClassName(\"myclass\");</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                    <text x=\"350\" y=\"145\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#33691E\">No Match (Case Mismatch)</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 8: When is `getElementsByTagName` most useful?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It's most useful when you need to select <strong>all elements of a specific type</strong> across the entire document, like all `<img>` tags or all `<a>` tags, without needing to worry about their classes or IDs.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 9: Combining `getElementsByClassName` and `getElementsByTagName`</h3>\n        <p class=\"text-gray-600 mb-3\">How would you select all `<a>` tags that have the class \"nav-link\"? (Hint: `getElementsByClassName` works on the `document` directly, but `getElementsByTagName` can also be called on a specific element.)</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You would typically use `document.querySelector` or `querySelectorAll` for this combined selection:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelectorAll(\"a.nav-link\");</code></pre>\n                While you *could* get all `<a>` tags and then filter by class, the CSS selector approach is more direct and common for this scenario.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 10: What is an `HTMLCollection`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> An `HTMLCollection` is a <strong>collection of HTML elements</strong> returned by `getElementsByClassName` and `getElementsByTagName`. It's array-like and \"live,\" meaning it updates automatically if the DOM changes.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 11: Can `getElementsByTagName` select elements within a specific parent element?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Yes, `getElementsByTagName` can be called on a specific element (not just `document`) to search only within that element's descendants. For example, `parentElement.getElementsByTagName('p')`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 12: Why might `querySelector` or `querySelectorAll` be preferred over `getElementsByClassName` or `getElementsByTagName` in modern JavaScript?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Because `querySelector` and `querySelectorAll` use CSS selectors, they offer much more flexibility in targeting elements (combinations, relationships, attributes) and `querySelectorAll` returns a `NodeList` which often has more convenient methods like `forEach`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 13: How do you access the first paragraph found by `document.getElementsByTagName('p')`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> First, get the collection, then access the first item by index:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const paragraphs = document.getElementsByTagName(\"p\");\nif (paragraphs.length > 0) {\n  const firstParagraph = paragraphs[0];\n  // Now you can work with firstParagraph\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 14: What is the primary difference in return value between `getElementsByClassName` and `querySelector`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `getElementsByClassName` returns an `HTMLCollection` (a collection of all matches), while `querySelector` returns a single `Element` object (or `null`).\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 15: How would you get all elements with the class \"info-box\" that are specifically `<div>` elements?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> While `getElementsByClassName(\"info-box\")` would get all elements with that class, you would typically use `querySelectorAll` for more specific combined selections:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>document.querySelectorAll(\"div.info-box\");</code></pre>\n                This specifically targets `div` elements with the class \"info-box\".\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "video": null,
  "intros": "<div class=\"tabs-container\">\n    <h2 class=\"text-3xl font-extrabold text-gray-800 mb-6 mt-6 text-center\">Lesson 7: Accessing Elements with getElementsByClassName and getElementsByTagName</h2>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">Discover how to grab groups of similar elements with JavaScript's classic collection methods</p>                   \n\n    <div class=\"tab-content-container p-6 sm:p-8\">\n        <div class=\"tab-content content1\" id=\"content1\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Group Element Selection</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">What if you could collect all similar elements on a page with just one command?</h2>\n            \n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <!-- 16:9 Aspect Ratio SVG -->\n                <div class=\"w-full max-w-4xl mx-auto mb-6\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 800 450\" class=\"w-full h-auto bg-white rounded-lg\">\n                        <!-- Browser Window -->\n                        <rect x=\"50\" y=\"30\" width=\"700\" height=\"390\" fill=\"#F3F4F6\" stroke=\"#D1D5DB\" stroke-width=\"2\" rx=\"4\"/>\n                        \n                        <!-- Browser Header -->\n                        <rect x=\"50\" y=\"30\" width=\"700\" height=\"40\" fill=\"#E5E7EB\" rx=\"4\"/>\n                        <circle cx=\"70\" cy=\"50\" r=\"6\" fill=\"#EF4444\"/>\n                        <circle cx=\"90\" cy=\"50\" r=\"6\" fill=\"#FBBF24\"/>\n                        <circle cx=\"110\" cy=\"50\" r=\"6\" fill=\"#10B981\"/>\n                        \n                        <!-- Page Content -->\n                        <rect x=\"70\" y=\"90\" width=\"660\" height=\"300\" fill=\"#F9FAFB\" stroke=\"#D1D5DB\" rx=\"4\"/>\n                        \n                        <!-- Product Cards -->\n                        <rect x=\"100\" y=\"120\" width=\"180\" height=\"120\" fill=\"#DBEAFE\" rx=\"4\" class=\"product-card\"/>\n                        <text x=\"190\" y=\"150\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#1E40AF\">Product Card</text>\n                        <text x=\"190\" y=\"180\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#4B5563\">class=\"product-card\"</text>\n                        \n                        <rect x=\"310\" y=\"120\" width=\"180\" height=\"120\" fill=\"#DBEAFE\" rx=\"4\" class=\"product-card\"/>\n                        <text x=\"400\" y=\"150\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#1E40AF\">Product Card</text>\n                        <text x=\"400\" y=\"180\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#4B5563\">class=\"product-card\"</text>\n                        \n                        <rect x=\"520\" y=\"120\" width=\"180\" height=\"120\" fill=\"#DBEAFE\" rx=\"4\" class=\"product-card\"/>\n                        <text x=\"610\" y=\"150\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#1E40AF\">Product Card</text>\n                        <text x=\"610\" y=\"180\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"12\" fill=\"#4B5563\">class=\"product-card\"</text>\n                        \n                        <!-- Buttons -->\n                        <rect x=\"150\" y=\"270\" width=\"100\" height=\"40\" fill=\"#FDE68A\" rx=\"4\"/>\n                        <text x=\"200\" y=\"295\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#92400E\">Add to Cart</text>\n                        \n                        <rect x=\"360\" y=\"270\" width=\"100\" height=\"40\" fill=\"#FDE68A\" rx=\"4\"/>\n                        <text x=\"410\" y=\"295\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#92400E\">Add to Cart</text>\n                        \n                        <rect x=\"570\" y=\"270\" width=\"100\" height=\"40\" fill=\"#FDE68A\" rx=\"4\"/>\n                        <text x=\"620\" y=\"295\" text-anchor=\"middle\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#92400E\">Add to Cart</text>\n                        \n                        <!-- JavaScript Console -->\n                        <rect x=\"100\" y=\"320\" width=\"600\" height=\"70\" fill=\"#FEF2F2\" stroke=\"#FECACA\" rx=\"4\"/>\n                        <text x=\"400\" y=\"340\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#DC2626\">JavaScript Code</text>\n                        \n                        <!-- ClassName Example -->\n                        <text x=\"400\" y=\"370\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#1E40AF\">let cards = document.getElementsByClassName('product-card');</text>\n                        \n                        <!-- TagName Example -->\n                        <text x=\"400\" y=\"400\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#1E40AF\">let buttons = document.getElementsByTagName('button');</text>\n                        \n                        <!-- Selection Visuals -->\n                        <path d=\"M 400 360 L 190 120\" stroke=\"#10B981\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 400 360 L 400 120\" stroke=\"#10B981\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 400 360 L 610 120\" stroke=\"#10B981\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        \n                        <path d=\"M 400 390 L 200 270\" stroke=\"#F59E0B\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 400 390 L 410 270\" stroke=\"#F59E0B\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        <path d=\"M 400 390 L 620 270\" stroke=\"#F59E0B\" stroke-width=\"2\" stroke-dasharray=\"5,5\"/>\n                        \n                        <!-- Collection Boxes -->\n                        <rect x=\"50\" y=\"400\" width=\"300\" height=\"30\" fill=\"#DBEAFE\" stroke=\"#3B82F6\" stroke-width=\"2\" rx=\"4\"/>\n                        <text x=\"200\" y=\"420\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">HTMLCollection (3 product cards)</text>\n                        \n                        <rect x=\"450\" y=\"400\" width=\"300\" height=\"30\" fill=\"#FDE68A\" stroke=\"#F59E0B\" stroke-width=\"2\" rx=\"4\"/>\n                        <text x=\"600\" y=\"420\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#92400E\">HTMLCollection (3 buttons)</text>\n                    </svg>\n                </div>\n                \n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">\n                    Think of <code class=\"bg-gray-200 px-1 rounded\">getElementsByClassName</code> as a magnet that attracts all elements sharing the same class, and <code class=\"bg-gray-200 px-1 rounded\">getElementsByTagName</code> as a net that catches all elements of the same type. These methods let you work with groups of similar elements at once - perfect for updating all product cards, collecting form inputs, or modifying every paragraph on a page.\n                </p>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed mt-4\">\n                    Unlike single-element selectors, these methods return live collections that automatically update as your page changes. They're like having a dynamic group chat with all elements that match your criteria - send one command and every member gets the message instantly!\n                </p>                \n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">\n                    \"Why select elements one-by-one when you can gather entire teams with a single command?\"\n                </p>\n            </div> \n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "summary": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 7: Accessing Elements with getElementsByClassName and getElementsByTagName</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Lesson Summary</h2>\n\n    <div class=\"summary-container bg-gray-50 p-6 rounded-lg shadow-md\">\n        <div class=\"flex flex-col lg:flex-row items-center lg:items-start gap-8 mb-8\">\n            <div class=\"lg:w-1/2\">\n                <h3 class=\"text-2xl font-bold text-gray-800 mb-4\">Targeting Groups of Elements</h3>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    When you need to select multiple elements that share a common characteristic, JavaScript provides dedicated methods: `getElementsByClassName()` and `getElementsByTagName()`. These are powerful for operating on groups of elements.\n                </p>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    These methods are essential for tasks like applying the same style to all elements with a certain class or performing an action on every instance of a specific tag type.\n                </p>\n                <h4 class=\"text-xl font-semibold text-gray-700 mb-3\">Key Methods:</h4>\n                <ul class=\"list-disc list-inside text-gray-600 ml-4\">\n                    <li><strong>`document.getElementsByClassName(className)`:</strong> Finds all elements with the specified class name. Can accept multiple class names separated by spaces.</li>\n                    <li><strong>`document.getElementsByTagName(tagName)`:</strong> Finds all elements with the specified HTML tag name (e.g., \"p\", \"div\", \"img\").</li>\n                </ul>\n            </div>\n            <div class=\"lg:w-1/2 flex justify-center\">\n                <!-- SVG Illustration: Group Selection -->\n                <svg class=\"h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"10\" fill=\"#F8F9FA\"/>\n                    <!-- DOM Structure -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">DOM Structure</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/> <!-- Item 1 -->\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Class: \"item\"</text>\n                    <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/> <!-- Item 2 -->\n                    <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Tag: `p`</text>\n                    <rect x=\"150\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/> <!-- Item 3 -->\n                    <text x=\"500\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Class: \"item\"</text>\n                    <!-- JavaScript Tools -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JavaScript Tools</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">document.getElementsByClassName(\"item\")</text>\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">document.getElementsByTagName(\"p\")</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Selects Groups of Elements</text>\n                </svg>\n            </div>\n        </div>\n\n        <div class=\"bg-blue-50 border-l-4 border-blue-500 text-blue-700 p-4 rounded-r-lg mb-6\" role=\"alert\">\n            <p class=\"font-bold\">Key Distinction:</p>\n            <p>Unlike `getElementById` (which returns a single element) or `querySelector` (which returns the first match), `getElementsByClassName` and `getElementsByTagName` are designed to return <strong>collections</strong> of elements.</p>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->"
}