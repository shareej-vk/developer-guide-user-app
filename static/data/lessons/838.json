{
  "id": 838,
  "unit_id": 83,
  "title": "Lesson 11: Working with Classes (classList, className)",
  "slug": "lesson_11_working_with_classes_classlist_classname",
  "content": "<div class=\"pt-6\">\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 11: Working with Classes (classList, className)</h1>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">\n        Classes are vital for styling and behavior. Let's learn how to manage them dynamically with JavaScript!\n    </p>\n\n    <!-- Illustration: Managing classes -->\n    <div class=\"flex justify-center mb-8\">\n        <svg class=\"h-64 w-full max-w-2xl\" viewBox=\"0 0 1920 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"1920\" height=\"500\" rx=\"10\" fill=\"#F0F4F8\"/>\n            <!-- Element -->\n            <rect x=\"100\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n            <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#E65100\">Target Element</text>\n            <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-width=\"1\"/>\n            <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Current Classes: \"box\"</text>\n            <!-- JavaScript Tools -->\n            <rect x=\"1000\" y=\"100\" width=\"800\" height=\"300\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n            <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"28\" fill=\"#1976D2\">JS Tools</text>\n            <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">1. Add: .classList.add(\"active\")</text>\n            <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">2. Remove: .remove(\"box\")</text>\n            <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">3. Toggle: .toggle(\"active\")</text>\n            <rect x=\"1100\" y=\"650\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#D1C4E9\" stroke=\"#7E57C2\" stroke-1=\"1\"/>\n            <text x=\"1450\" y=\"700\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#7E57C2\">4. Check: .contains(\"item\")</text>\n            <!-- Connection -->\n            <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n            <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n            <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Manage Classes Easily</text>\n        </svg>\n        <p class=\"intro-explanation text-gray-600 leading-relaxed\">Classes are incredibly powerful for styling and toggling element states in CSS. JavaScript allows you to dynamically add, remove, or toggle these classes on elements, which is essential for creating interactive user interfaces. Instead of manipulating the `class` attribute string directly (which can be error-prone), JavaScript provides the `.classList` property, a much cleaner and more robust way to manage classes.</p>\n        <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Control styling and behavior by manipulating CSS classes!</p>\n    </div>\n\n    <!-- Tab 2 Content -->\n    <div class=\"tab-content content2\" id=\"content2\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 2: The `classList` Power Tool</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">What specific tools does JavaScript give you to add, remove, toggle, or check for the presence of CSS classes on an element?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- Element -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Target Element</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Classes: \"box\"</text>\n                <!-- JavaScript Tools -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">The `classList` Property</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Add: .add(\"new-class\")</text>\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Remove: .remove(\"box\")</text>\n                <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Toggle: .toggle(\"active\")</text>\n                <rect x=\"1100\" y=\"650\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#D1C4E9\" stroke=\"#7E57C2\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"700\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#7E57C2\">Check: .contains(\"item\")</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Dedicated Class Management</text>\n            </svg>\n            <p class=\"intro-explanation text-gray-600 leading-relaxed\">JavaScript provides the `.classList` property on DOM elements. This property is an object that has specific methods for managing classes: `.add('className')`, `.remove('className')`, `.toggle('className')`, and `.contains('className')`. These methods make it easy and safe to add, remove, toggle the presence of a class, or check if an element currently has a specific class.</p>\n            <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">`.classList`: Your dedicated tool for class manipulation.</p>\n        </div>\n    </div>\n    <!-- Tab 3 Content -->\n    <div class=\"tab-content content3\" id=\"content3\">\n        <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 3: Add, Remove, Toggle</h3>\n        <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">What are the most common class manipulation tasks, and how do `.classList` methods handle them efficiently?</h2>\n        <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n            <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                <!-- Element -->\n                <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Element State</text>\n                <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Initial: \"button\"</text>\n                <!-- JS Actions -->\n                <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">JS Methods</text>\n                <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Add: .add(\"active\")</text>\n                <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Remove: .remove(\"button\")</text>\n                <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Toggle: .toggle(\"hovered\")</text>\n                <!-- Connection -->\n                <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Change State Easily</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">The `.classList` property offers methods for the most common class operations: `.add()` to add a class, `.remove()` to take one away, and `.toggle()` which intelligently adds a class if it's missing and removes it if it's present. This is perfect for interactive elements like highlighting a selected item or showing/hiding content.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Add, remove, or toggle classes with dedicated methods!</p>\n            </div>\n        </div>\n        <!-- Tab 4 Content -->\n        <div class=\"tab-content content4\" id=\"content4\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 4: Checking for Classes</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Before adding or removing a class, how can you check if an element already possesses it?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- Element -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Element's Classes</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Classes: \"item active\"</text>\n                    <!-- JavaScript Check -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">Check with `classList`</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Check: .contains(\"active\")</text>\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Result: true</text>\n                    <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Check: .contains(\"highlight\")</text>\n                    <rect x=\"1100\" y=\"650\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#D1C4E9\" stroke=\"#7E57C2\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"700\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#7E57C2\">Result: false</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Conditional Logic</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">The `.contains('className')` method is your way to check if an element already has a specific class. This is incredibly useful for implementing behaviors like toggling visibility or selection. For example, you might only want to add an 'active' class if the element doesn't already have it, or remove a 'disabled' class only if it exists.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Check first: Use `.contains()` for smarter class management.</p>\n            </div>\n        </div>\n        <!-- Tab 5 Content -->\n        <div class=\"tab-content content5\" id=\"content5\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">Intro 5: The Old Way vs. The New Way</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">Before `classList`, managing classes was tricky. How did it work, and why is `classList` such a significant improvement?</h2>\n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <svg class=\"mx-auto h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"8\" fill=\"#F0F4F8\"/>\n                    <!-- Old Way: String Manipulation -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">The Old Way (String Manipulation)</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Get: element.className</text>\n                    <rect x=\"150\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Add: element.className += \" new-class\"; // Messy!</text>\n                    <rect x=\"150\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#CFD8DC\" stroke=\"#90A4AE\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#424242\">Remove: element.className = element.className.replace(\"old-class\", \"\"); // Also messy</text>\n                    <!-- New Way: classList -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">The New Way (`classList`)</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Get: element.classList</text>\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Add: .add(\"new-class\")</text>\n                    <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Remove: .remove(\"old-class\")</text>\n                    <rect x=\"1100\" y=\"650\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#D1C4E9\" stroke=\"#7E57C2\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"700\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#7E57C2\">Toggle: .toggle(\"active\")</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Cleaner and Safer</text>\n                </svg>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">Manipulating the `className` property directly involves working with strings. You'd need to manually check for spaces, add spaces correctly, and remove them cleanly, which is prone to errors. The `.classList` property offers dedicated methods like `.add()`, `.remove()`, and `.toggle()` that handle all this logic for you, making your code much more readable, less buggy, and easier to maintain.</p>\n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">Say goodbye to string headaches, hello to `classList`!</p>\n            </div>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "questions": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 11: Working with Classes (classList, className)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Test Your Class Manipulation Skills!</h2>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 1: What is the primary JavaScript property for managing an element's CSS classes?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> The primary property is <strong>`.classList`</strong>.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 2: What does `element.classList.add('newClass')` do?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It adds the specified class (`'newClass'`) to the element's list of classes. If the class already exists, it does nothing.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"50\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">Element classes: \"item\"</text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: element.classList.add(\"active\");</text>\n                    <text x=\"450\" y=\"155\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Result: element classes become \"item active\"</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 3: What does `element.classList.remove('className')` do?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It removes the specified class (`'className'`) from the element's list of classes. If the class doesn't exist, it does nothing.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 4: What does `element.classList.toggle('className')` do?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It toggles the specified class. If the class is present, it removes it. If the class is not present, it adds it.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 5: How can you check if an element has a specific class?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You use the `.contains('className')` method:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (element.classList.contains(\"active\")) {\n  // Do something if the class \"active\" is present\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 6: What does `element.className` return?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns a <strong>string</strong> containing all the classes applied to the element, separated by spaces.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"100\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <div class=\"box active item\">...</text>\n                    <!-- JS Result -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS Result (element.className):</text>\n                    <text x=\"450\" y=\"155\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">\"box active item\"</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 7: Why is `classList` generally preferred over manipulating `className` directly?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Because `classList` provides dedicated, safer, and more readable methods (`add`, `remove`, `toggle`, `contains`) for class manipulation, avoiding the complexities and potential errors of direct string manipulation.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 8: What does `element.classList.toggle('active')` do if the element currently has the class \"active\"?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It <strong>removes</strong> the \"active\" class from the element.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 9: What does `element.classList.toggle('active')` do if the element does NOT currently have the class \"active\"?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It <strong>adds</strong> the \"active\" class to the element.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 10: How can you get the first class name from an element's `classList`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `classList` is a `DOMTokenList`, which is array-like. You can access the first class using index 0:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (element.classList.length > 0) {\n  const firstClass = element.classList[0];\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 11: What does `element.className` return if an element has multiple classes like `class=\"item active\"`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It returns a single string with all classes separated by spaces: `\"item active\"`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 12: How would you add the class \"highlight\" to an element stored in the `myElement` variable?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using the `classList` property:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>myElement.classList.add(\"highlight\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 13: How would you remove the class \"disabled\" from an element?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using `classList.remove()`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>element.classList.remove(\"disabled\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 14: What does `element.classList.toggle('visible')` do if the element already has the \"visible\" class?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It <strong>removes</strong> the \"visible\" class from the element.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"question-answer-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Question 15: Why is `classList` better than directly manipulating `className`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `classList` methods (`add`, `remove`, `toggle`, `contains`) are much easier to use and less error-prone than manually manipulating the `className` string, which requires careful handling of spaces and existing classes.\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "display_order": 11,
  "created_at": "2025-06-29 16:06:33",
  "updated_at": "2025-07-01 02:15:27",
  "exercises": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 11: Working with Classes (classList, className)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Let's Practice Class Management!</h2>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 1: Add a Class</h3>\n        <p class=\"text-gray-600 mb-3\">Given an element selected into a variable `myButton`, add the class `btn-primary` to it.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (myButton) {\n  myButton.classList.add(\"btn-primary\");\n}</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"50\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <button>...</button></text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: myButton.classList.add(\"btn-primary\");</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                    <text x=\"350\" y=\"145\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#33691E\">Adds \"btn-primary\" class</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 2: Remove a Class</h3>\n        <p class=\"text-gray-600 mb-3\">Given an element `myDiv` that currently has the class \"hidden\", remove that class.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (myDiv) {\n  myDiv.classList.remove(\"hidden\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 3: Toggle a Class</h3>\n        <p class=\"text-gray-600 mb-3\">You have an element `myButton` that should toggle the \"active\" class when clicked. Write the JavaScript to toggle the \"active\" class on `myButton`.</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (myButton) {\n  myButton.classList.toggle(\"active\");\n}</code></pre>\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"50\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">Element classes: \"button\"</text>\n                    <!-- JS Code -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS: myButton.classList.toggle(\"active\");</text>\n                    <text x=\"450\" y=\"155\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Adds \"active\" if missing,</text>\n                    <text x=\"450\" y=\"180\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">Removes it if present.</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 4: Check if a Class Exists</h3>\n        <p class=\"text-gray-600 mb-3\">How do you check if an element stored in `myElement` currently has the class \"error\"?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Using the `.contains()` method:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (myElement) {\n  const hasError = myElement.classList.contains(\"error\");\n  console.log(hasError); // Will log true or false\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 5: Add Multiple Classes</h3>\n        <p class=\"text-gray-600 mb-3\">How can you add both the classes \"highlight\" and \"important\" to an element?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> You can call `.add()` multiple times:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>element.classList.add(\"highlight\");\nelement.classList.add(\"important\");</code></pre>\n                Or, `classList.add()` can accept multiple arguments:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>element.classList.add(\"highlight\", \"important\");</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 6: What does `element.className` do?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It gets or sets the <strong>entire string</strong> of all classes applied to the element. While it can be used to add/remove classes, it's more cumbersome than `classList`.\n            </p>\n            <!-- SVG Illustration -->\n            <div class=\"flex justify-center mt-4\">\n                <svg class=\"h-48 w-full max-w-md\" viewBox=\"0 0 600 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"600\" height=\"300\" rx=\"10\" fill=\"#F0F4F8\"/>\n                    <!-- Element -->\n                    <rect x=\"50\" y=\"100\" width=\"250\" height=\"100\" rx=\"8\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-width=\"1\"/>\n                    <text x=\"175\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#E64A19\">HTML: <div class=\"box active item\">...</text>\n                    <!-- JS Result -->\n                    <rect x=\"350\" y=\"100\" width=\"200\" height=\"80\" rx=\"8\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"450\" y=\"130\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">JS Result (element.className):</text>\n                    <text x=\"450\" y=\"155\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#1976D2\">\"box active item\"</text>\n                    <!-- Connection -->\n                    <path d=\"M300 130 Q 350 130 400 140\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"400 140 385 150 385 130\" fill=\"#7CB342\"/>\n                    <text x=\"350\" y=\"145\" font-family=\"Arial, sans-serif\" font-size=\"16\" fill=\"#33691E\">Gets the whole string</text>\n                </svg>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 7: Why is `classList` better than `className`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> `classList` provides methods (`add`, `remove`, `toggle`, `contains`) that are specifically designed for class manipulation, making the code cleaner, more readable, and less error-prone compared to manually manipulating the `className` string.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 8: Practical use of `toggle`</h3>\n        <p class=\"text-gray-600 mb-3\">Imagine a button that should show/hide a dropdown menu. How could you use `classList.toggle()` to handle showing/hiding the menu when the button is clicked?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong>\n                HTML:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code><button id=\"toggleButton\">Toggle Menu</button>\n<div id=\"menu\" class=\"hidden\">Menu Content</div></code></pre>\n                CSS:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>.hidden { display: none; }\n.visible { display: block; }</code></pre>\n                JavaScript:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>const toggleBtn = document.getElementById(\"toggleButton\");\nconst menu = document.getElementById(\"menu\");\n\nif (toggleBtn && menu) {\n  toggleBtn.addEventListener(\"click\", function() {\n    menu.classList.toggle(\"hidden\"); // Add/remove 'hidden' class\n    // Or toggle a 'visible' class if that's how your CSS is set up\n  });\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 9: Checking for a class before adding</h3>\n        <p class=\"text-gray-600 mb-3\">You want to add the class \"highlight\" to an element only if it doesn't already have it. How would you do this using `classList`?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> Use `contains()` and `add()`:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>if (element && !element.classList.contains(\"highlight\")) {\n  element.classList.add(\"highlight\");\n}</code></pre>\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 10: How does `classList` handle multiple classes in `add` or `remove`?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> The `add()` and `remove()` methods can accept multiple class names as separate string arguments, and they will be processed individually. For example: `element.classList.add(\"class1\", \"class2\");`\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 11: What is `classList` itself?</h3>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> It's a <strong>`DOMTokenList</strong>` object that provides methods to manage the class attribute. It's not a simple string like `className`.\n            </p>\n        </div>\n    </div>\n\n    <div class=\"exercise-container mb-8\">\n        <h3 class=\"text-xl font-bold text-gray-800 mb-3\">Exercise 12: Replacing all classes</h3>\n        <p class=\"text-gray-600 mb-3\">You have an element with classes \"old-class another-class\". How would you replace all its classes with just \"new-class\" using JavaScript?</p>\n        <button class=\"show-answer-button bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-3\">Show Answer</button>\n        <div class=\"answer-container hidden bg-gray-100 p-4 rounded\">\n            <p class=\"text-gray-700\">\n                <strong>Answer:</strong> The most straightforward way is to set the `className` property directly:\n                <pre class=\"bg-gray-100 p-2 rounded text-sm font-mono overflow-x-auto\"><code>element.className = \"new-class\";</code></pre>\n                While you *could* achieve this with `classList.remove` and `classList.add`, direct `className` assignment is simpler for replacing all classes at once.\n            </p>\n        </div>\n    </div>\n\n</div>\n<!--end-of-code-block-->",
  "video": null,
  "intros": "<div class=\"tabs-container\">\n    <h2 class=\"text-3xl font-extrabold text-gray-800 mb-6 mt-6 text-center\">Lesson 11: Working with Classes (classList, className)</h2>\n    <p class=\"text-gray-600 text-lg mb-8 text-center px-4\">Master the art of changing element appearances like a digital stylist</p>                   \n\n    <div class=\"tab-content-container p-6 sm:p-8\">\n        <div class=\"tab-content content1\" id=\"content1\">\n            <h3 class=\"intro-title text-xl font-semibold text-gray-700 mb-3\">CSS Class Magic</h3>\n            <h2 class=\"intro-question text-2xl font-bold text-gray-900 mb-4\">What if you could instantly change an element's appearance like changing clothes?</h2>\n            \n            <div class=\"description-container flex flex-col justify-center w-full mb-6 p-4 bg-gray-50 rounded-lg shadow-inner\">\n                <!-- 16:9 Aspect Ratio SVG -->\n                <div class=\"w-full max-w-4xl mx-auto mb-6\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 800 450\" class=\"w-full h-auto bg-white rounded-lg\">\n                        <!-- Browser Window -->\n                        <rect x=\"50\" y=\"30\" width=\"700\" height=\"390\" fill=\"#F3F4F6\" stroke=\"#D1D5DB\" stroke-width=\"2\" rx=\"4\"/>\n                        \n                        <!-- Browser Header -->\n                        <rect x=\"50\" y=\"30\" width=\"700\" height=\"40\" fill=\"#E5E7EB\" rx=\"4\"/>\n                        <circle cx=\"70\" cy=\"50\" r=\"6\" fill=\"#EF4444\"/>\n                        <circle cx=\"90\" cy=\"50\" r=\"6\" fill=\"#FBBF24\"/>\n                        <circle cx=\"110\" cy=\"50\" r=\"6\" fill=\"#10B981\"/>\n                        \n                        <!-- Original Element -->\n                        <rect x=\"150\" y=\"100\" width=\"200\" height=\"150\" fill=\"#BFDBFE\" stroke=\"#3B82F6\" stroke-width=\"2\" rx=\"4\" id=\"element\"/>\n                        <text x=\"250\" y=\"130\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#1E40AF\">My Element</text>\n                        <text x=\"250\" y=\"160\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#4B5563\">class=\"box\"</text>\n                        <text x=\"250\" y=\"190\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#4B5563\">Current classes: box</text>\n                        \n                        <!-- Modified Element -->\n                        <rect x=\"450\" y=\"100\" width=\"200\" height=\"150\" fill=\"#FDE68A\" stroke=\"#F59E0B\" stroke-width=\"2\" rx=\"15\" id=\"modifiedElement\"/>\n                        <text x=\"550\" y=\"130\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#92400E\">My Element</text>\n                        <text x=\"550\" y=\"160\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#4B5563\">class=\"box active rounded\"</text>\n                        <text x=\"550\" y=\"190\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#4B5563\">Current classes: box active rounded</text>\n                        \n                        <!-- Wardrobe -->\n                        <rect x=\"150\" y=\"280\" width=\"500\" height=\"120\" fill=\"#EDE9FE\" stroke=\"#8B5CF6\" stroke-width=\"2\" rx=\"4\"/>\n                        <text x=\"400\" y=\"300\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#6D28D9\">CSS Class Wardrobe</text>\n                        \n                        <!-- Class Items -->\n                        <rect x=\"180\" y=\"320\" width=\"90\" height=\"40\" fill=\"#DBEAFE\" rx=\"4\"/>\n                        <text x=\"225\" y=\"345\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#1E40AF\">.box</text>\n                        \n                        <rect x=\"290\" y=\"320\" width=\"90\" height=\"40\" fill=\"#FDE68A\" rx=\"4\"/>\n                        <text x=\"335\" y=\"345\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#92400E\">.active</text>\n                        \n                        <rect x=\"400\" y=\"320\" width=\"90\" height=\"40\" fill=\"#D1FAE5\" rx=\"4\"/>\n                        <text x=\"445\" y=\"345\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#065F46\">.rounded</text>\n                        \n                        <rect x=\"510\" y=\"320\" width=\"90\" height=\"40\" fill=\"#FECACA\" rx=\"4\"/>\n                        <text x=\"555\" y=\"345\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"14\" fill=\"#B91C1C\">.hidden</text>\n                        \n                        <!-- JavaScript Tools -->\n                        <rect x=\"300\" y=\"220\" width=\"200\" height=\"40\" fill=\"#EFF6FF\" stroke=\"#3B82F6\" rx=\"4\"/>\n                        <text x=\"400\" y=\"245\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#1E40AF\">classList.add() | classList.remove()</text>\n                        \n                        <!-- Transformation Arrows -->\n                        <path d=\"M 350 100 L 450 100\" fill=\"none\" stroke=\"#8B5CF6\" stroke-width=\"3\" marker-end=\"url(#arrowhead)\"/>\n                        <text x=\"400\" y=\"90\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#6D28D9\">After Class Changes</text>\n                        \n                        <!-- Tool Icons -->\n                        <circle cx=\"250\" cy=\"260\" r=\"15\" fill=\"#BFDBFE\" stroke=\"#3B82F6\" stroke-width=\"2\"/>\n                        <path d=\"M 240 250 L 260 270 M 260 250 L 240 270\" stroke=\"#3B82F6\" stroke-width=\"2\"/>\n                        \n                        <circle cx=\"550\" cy=\"260\" r=\"15\" fill=\"#FDE68A\" stroke=\"#F59E0B\" stroke-width=\"2\"/>\n                        <path d=\"M 540 255 L 545 265 L 560 250\" fill=\"none\" stroke=\"#F59E0B\" stroke-width=\"2\"/>\n                        \n                        <!-- Class Manipulation -->\n                        <rect x=\"200\" y=\"400\" width=\"400\" height=\"30\" fill=\"#F0FDF4\" stroke=\"#10B981\" rx=\"4\"/>\n                        <text x=\"400\" y=\"420\" text-anchor=\"middle\" font-family=\"monospace\" font-size=\"16\" fill=\"#065F46\">element.classList.add('active', 'rounded');</text>\n                    </svg>\n                </div>\n                \n                <p class=\"intro-explanation text-gray-600 leading-relaxed\">\n                    Think of CSS classes as different outfits for your webpage elements. With <code class=\"bg-gray-200 px-1 rounded\">className</code> and <code class=\"bg-gray-200 px-1 rounded\">classList</code>, you become a digital stylist who can change an element's appearance instantly! Need to highlight a button? Add the 'active' class. Want to hide a section? Add the 'hidden' class. \n                </p>\n                <p class=\"intro-explanation text-gray-600 leading-relaxed mt-4\">\n                    While <code class=\"bg-gray-200 px-1 rounded\">className</code> lets you completely replace an element's classes, <code class=\"bg-gray-200 px-1 rounded\">classList</code> gives you precision tools to add, remove, or toggle individual classes without affecting others. It's like having a complete wardrobe where you can mix and match outfits for your elements!\n                </p>                \n                <p class=\"intro-tagline mt-6 text-center font-semibold text-sky-600 italic\">\n                    \"Why redesign your entire website when you can just change classes?\"\n                </p>\n            </div> \n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->",
  "summary": "<div>\n    <h1 class=\"text-4xl font-bold text-gray-800 mb-4 text-center\">Lesson 11: Working with Classes (classList, className)</h1>\n\n    <h2 class=\"text-2xl font-semibold text-gray-700 mb-6 mt-8\">Lesson Summary</h2>\n\n    <div class=\"summary-container bg-gray-50 p-6 rounded-lg shadow-md\">\n        <div class=\"flex flex-col lg:flex-row items-center lg:items-start gap-8 mb-8\">\n            <div class=\"lg:w-1/2\">\n                <h3 class=\"text-2xl font-bold text-gray-800 mb-4\">Managing Classes Dynamically</h3>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    CSS classes are fundamental for styling and controlling element appearance and behavior. JavaScript provides powerful ways to manage these classes on HTML elements, making your web pages interactive and responsive.\n                </p>\n                <p class=\"text-gray-600 leading-relaxed mb-4\">\n                    The primary tool for this is the `.classList` property, which offers dedicated methods for adding, removing, toggling, and checking for classes, simplifying the process and avoiding common errors associated with direct string manipulation of the `className` property.\n                </p>\n                <h4 class=\"text-xl font-semibold text-gray-700 mb-3\">Key Tools:</h4>\n                <ul class=\"list-disc list-inside text-gray-600 ml-4\">\n                    <li><strong>`.classList`</strong>: A property that provides methods to manage an element's classes.</li>\n                    <li><strong>`.add('className')`</strong>: Adds a specified class.</li>\n                    <li><strong>`.remove('className')</strong>: Removes a specified class.</li>\n                    <li><strong>`.toggle('className')`</strong>: Adds the class if it's missing, removes it if it's present.</li>\n                    <li><strong>`.contains('className')`</strong>: Checks if an element has a specific class, returning `true` or `false`.</li>\n                    <li><strong>`.className`</strong>: A string property holding all classes. Useful for getting the full string or replacing all classes, but less convenient for individual manipulations.</li>\n                </ul>\n            </div>\n            <div class=\"lg:w-1/2 flex justify-center\">\n                <!-- SVG Illustration: classList Methods -->\n                <svg class=\"h-64 w-full max-w-xl\" viewBox=\"0 0 1920 1080\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <rect width=\"1920\" height=\"1080\" rx=\"10\" fill=\"#F8F9FA\"/>\n                    <!-- Element -->\n                    <rect x=\"100\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#FFF9C4\" stroke=\"#FFF59D\" stroke-width=\"2\"/>\n                    <text x=\"500\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#E65100\">Target Element</text>\n                    <rect x=\"150\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#FFE0B2\" stroke=\"#FFB74D\" stroke-1=\"1\"/>\n                    <text x=\"500\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E65100\">Current Classes: \"box item\"</text>\n                    <!-- JavaScript Tools -->\n                    <rect x=\"1000\" y=\"100\" width=\"800\" height=\"800\" rx=\"10\" fill=\"#E3F2FD\" stroke=\"#90CAF9\" stroke-width=\"2\"/>\n                    <text x=\"1400\" y=\"150\" text-anchor=\"middle\" font-family=\"Arial, sans-serif\" font-size=\"30\" fill=\"#1976D2\">Tools: classList</text>\n                    <rect x=\"1100\" y=\"200\" width=\"700\" height=\"40\" rx=\"5\" fill=\"#C8E6C9\" stroke=\"#81C784\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"230\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#2E7D32\">Add: .add(\"active\")</text>\n                    <rect x=\"1100\" y=\"300\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFCCBC\" stroke=\"#FF8A65\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"350\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Remove: .remove(\"item\")</text>\n                    <rect x=\"1100\" y=\"480\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#FFAB91\" stroke=\"#FF7043\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"530\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#E64A19\">Toggle: .toggle(\"highlight\")</text>\n                    <rect x=\"1100\" y=\"650\" width=\"700\" height=\"150\" rx=\"5\" fill=\"#D1C4E9\" stroke=\"#7E57C2\" stroke-1=\"1\"/>\n                    <text x=\"1450\" y=\"700\" font-family=\"Arial, sans-serif\" font-size=\"18\" fill=\"#7E57C2\">Check: .contains(\"box\")</text>\n                    <!-- Connection -->\n                    <path d=\"M800 350 Q 900 350 1100 350\" stroke=\"#7CB342\" stroke-width=\"4\" fill=\"none\" stroke-dasharray=\"8,4\"/>\n                    <polygon points=\"1100 350 1085 360 1085 340\" fill=\"#7CB342\"/>\n                    <text x=\"950\" y=\"355\" font-family=\"Arial, sans-serif\" font-size=\"20\" fill=\"#33691E\">Manage Classes Efficiently</text>\n                </svg>\n            </div>\n        </div>\n\n        <div class=\"bg-green-50 border-l-4 border-green-500 text-green-700 p-4 rounded-r-lg mb-6\" role=\"alert\">\n            <p class=\"font-bold\">Why `classList` is better than `className`:</p>\n            <p>`classList` provides methods like `add()`, `remove()`, `toggle()`, and `contains()` which are specifically designed for class manipulation, making code cleaner, more readable, and less prone to errors compared to manually editing the `className` string.</p>\n        </div>\n    </div>\n</div>\n<!--end-of-code-block-->"
}